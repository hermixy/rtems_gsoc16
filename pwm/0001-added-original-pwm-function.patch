From 84d97bc1c8f80a44b1c1f9ecfa0ab0e7601c246a Mon Sep 17 00:00:00 2001
From: Punit Vara <punitvara@gmail.com>
Date: Sat, 9 Apr 2016 03:15:36 +0530
Subject: [PATCH] added original pwm function

---
 c/src/lib/libbsp/arm/beagle/Makefile.am       |    4 +
 c/src/lib/libbsp/arm/beagle/include/bbb-pwm.h |   44 +
 c/src/lib/libbsp/arm/beagle/preinstall.am     |    4 +
 c/src/lib/libbsp/arm/beagle/pwm/bbb-pwm.c     |  553 +++++++
 c/src/lib/libbsp/bfin/acinclude.m4            |    4 +-
 c/src/lib/libbsp/powerpc/acinclude.m4         |    4 +-
 c/src/lib/libcpu/arm/shared/include/am335x.h  | 2016 ++++++++++++++++++++++++-
 7 files changed, 2624 insertions(+), 5 deletions(-)
 create mode 100644 c/src/lib/libbsp/arm/beagle/include/bbb-pwm.h
 create mode 100644 c/src/lib/libbsp/arm/beagle/pwm/bbb-pwm.c

diff --git a/c/src/lib/libbsp/arm/beagle/Makefile.am b/c/src/lib/libbsp/arm/beagle/Makefile.am
index 20d3092..7ddd1a9 100644
--- a/c/src/lib/libbsp/arm/beagle/Makefile.am
+++ b/c/src/lib/libbsp/arm/beagle/Makefile.am
@@ -41,6 +41,7 @@ include_bsp_HEADERS += include/irq.h
 include_bsp_HEADERS += include/i2c.h
 include_bsp_HEADERS += include/beagleboneblack.h
 include_bsp_HEADERS += include/bbb-gpio.h
+include_bsp_HEADERS += include/bbb-pwm.h
 
 include_libcpu_HEADERS =
 include_libcpu_HEADERS += ../../../libcpu/arm/shared/include/arm-cp15.h
@@ -117,6 +118,9 @@ libbsp_a_SOURCES += misc/i2c.c
 # GPIO
 libbsp_a_SOURCES += gpio/bbb-gpio.c
 
+#PWM
+libbsp_a_SOURCES += pwm/bbb-pwm.c
+
 #RTC
 libbsp_a_SOURCES += rtc.c
 libbsp_a_SOURCES += ../../shared/tod.c
diff --git a/c/src/lib/libbsp/arm/beagle/include/bbb-pwm.h b/c/src/lib/libbsp/arm/beagle/include/bbb-pwm.h
new file mode 100644
index 0000000..c5f76e5
--- /dev/null
+++ b/c/src/lib/libbsp/arm/beagle/include/bbb-pwm.h
@@ -0,0 +1,44 @@
+#ifndef LIBBSP_ARM_BEAGLE_BBB_PWM_H
+#define LIBBSP_ARM_BEAGLE_BBB_PWM_H
+
+
+void PWMSSTBClkEnable(unsigned int instance);
+void PWMSSModuleClkConfig(unsigned int instanceNum);
+void EHRPWMTimebaseClkConfig(unsigned int baseAddr,
+                             unsigned int tbClk,
+                             unsigned int moduleClk);
+void EHRPWMPWMOpFreqSet(unsigned int baseAddr,
+                        unsigned int tbClk,
+                        unsigned int pwmFreq,
+                        unsigned int counterDir,
+                        bool enableShadowWrite);
+void EHRPWMTimebaseSyncDisable(unsigned int baseAddr);
+void EHRPWMSyncOutModeSet(unsigned int baseAddr, unsigned int syncOutMode);
+void EHRPWMTBEmulationModeSet(unsigned int baseAddr, unsigned int mode);
+bool EHRPWMLoadCMPA(unsigned int baseAddr,
+                    unsigned int CMPAVal,
+                    bool enableShadowWrite,
+                    unsigned int ShadowToActiveLoadTrigger,
+                    bool OverwriteShadowFull);
+bool EHRPWMLoadCMPB(unsigned int baseAddr,
+                    unsigned int CMPBVal,
+                    bool enableShadowWrite,
+                    unsigned int ShadowToActiveLoadTrigger,
+                    bool OverwriteShadowFull);
+void EHRPWMConfigureAQActionOnB(unsigned int baseAddr,
+                                unsigned int zero,
+                                unsigned int period,
+                                unsigned int CAUp,
+                                unsigned int CADown,
+                                unsigned int CBUp,
+                                unsigned int CBDown,
+                                unsigned int SWForced);
+void EHRPWMDBOutput(unsigned int baseAddr, unsigned int DBgenOpMode);
+void EHRPWMChopperDisable(unsigned int baseAddr);
+void EHRPWMTZTripEventDisable(unsigned int baseAddr, bool osht_CBC);
+void EHRPWMETIntPrescale(unsigned int baseAddr, unsigned int prescale);
+void EHRPWMETIntSourceSelect(unsigned int baseAddr, unsigned int selectInt);
+void EHRPWMHRDisable(unsigned int baseAddr);
+
+
+#endif
diff --git a/c/src/lib/libbsp/arm/beagle/preinstall.am b/c/src/lib/libbsp/arm/beagle/preinstall.am
index 3701a2b..8a7ff8b 100644
--- a/c/src/lib/libbsp/arm/beagle/preinstall.am
+++ b/c/src/lib/libbsp/arm/beagle/preinstall.am
@@ -118,6 +118,10 @@ $(PROJECT_INCLUDE)/bsp/bbb-gpio.h: include/bbb-gpio.h $(PROJECT_INCLUDE)/bsp/$(d
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/bsp/bbb-gpio.h
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/bsp/bbb-gpio.h
 
+$(PROJECT_INCLUDE)/bsp/bbb-pwm.h: include/bbb-pwm.h $(PROJECT_INCLUDE)/bsp/$(dirstamp)
+	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/bsp/bbb-pwm.h
+PREINSTALL_FILES += $(PROJECT_INCLUDE)/bsp/bbb-pwm.h
+
 $(PROJECT_INCLUDE)/libcpu/arm-cp15.h: ../../../libcpu/arm/shared/include/arm-cp15.h $(PROJECT_INCLUDE)/libcpu/$(dirstamp)
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/libcpu/arm-cp15.h
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/libcpu/arm-cp15.h
diff --git a/c/src/lib/libbsp/arm/beagle/pwm/bbb-pwm.c b/c/src/lib/libbsp/arm/beagle/pwm/bbb-pwm.c
new file mode 100644
index 0000000..9d87e48
--- /dev/null
+++ b/c/src/lib/libbsp/arm/beagle/pwm/bbb-pwm.c
@@ -0,0 +1,553 @@
+#include<libcpu/am335x.h>
+#include<stdio.h>
+#include<bsp/gpio.h>
+#include<bsp/bbb-gpio.h>
+
+//*****************************************************************************
+//
+// Macros for hardware access, both direct and via the bit-band region.
+//
+//*****************************************************************************
+#define HWREG(x)                                                              \
+        (*((volatile unsigned int *)(x)))
+#define HWREGH(x)                                                             \
+        (*((volatile unsigned short *)(x)))
+#define HWREGB(x)                                                             \
+        (*((volatile unsigned char *)(x)))
+#define HWREGBITW(x, b)                                                       \
+        HWREG(((unsigned int)(x) & 0xF0000000) | 0x02000000 |                \
+              (((unsigned int)(x) & 0x000FFFFF) << 5) | ((b) << 2))
+#define HWREGBITH(x, b)                                                       \
+        HWREGH(((unsigned int)(x) & 0xF0000000) | 0x02000000 |               \
+               (((unsigned int)(x) & 0x000FFFFF) << 5) | ((b) << 2))
+#define HWREGBITB(x, b)                                                       \
+        HWREGB(((unsigned int)(x) & 0xF0000000) | 0x02000000 |               \
+               (((unsigned int)(x) & 0x000FFFFF) << 5) | ((b) << 2))
+
+
+/**
+ * \brief   This function Enables TBCLK(Time Base Clock) for specific
+ *          EPWM instance of pwmsubsystem.
+ *
+ * \param   instance  It is the instance number of EPWM of pwmsubsystem.
+ *
+ **/
+void PWMSSTBClkEnable(unsigned int instance)
+{
+    switch(instance)
+    {
+
+         case 0:
+               HWREG(SOC_CONTROL_REGS + CONTROL_PWMSS_CTRL) |=
+                                             CONTROL_PWMSS_CTRL_PWMSS0_TBCLKEN;
+               break;
+
+         case 1:
+               HWREG(SOC_CONTROL_REGS + CONTROL_PWMSS_CTRL) |=
+                                             CONTROL_PWMSS_CTRL_PWMMS1_TBCLKEN;
+               break;
+
+         case 2:
+               HWREG(SOC_CONTROL_REGS + CONTROL_PWMSS_CTRL) |=
+                                             CONTROL_PWMSS_CTRL_PWMSS2_TBCLKEN;
+               break;
+
+         default:
+         break;
+    }
+}
+
+/**
+ * \brief   This function configures the L3 and L4_PER system clocks.
+ *          It also configures the system clocks for the specified ePWMSS
+ *          instance.
+ *
+ * \param   instanceNum    The instance number of ePWMSS whose system clocks
+ *                         have to be configured.
+ *
+ * 'instanceNum' can take one of the following values:
+ * (0 <= instanceNum <= 2)
+ *
+ * \return  None.
+ *
+ */
+void PWMSSModuleClkConfig(unsigned int instanceNum)
+{
+    HWREG(SOC_PRCM_REGS + CM_PER_L3S_CLKSTCTRL) |=
+                             CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_SW_WKUP;
+
+    while((HWREG(SOC_PRCM_REGS + CM_PER_L3S_CLKSTCTRL) &
+     CM_PER_L3S_CLKSTCTRL_CLKTRCTRL) != CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_SW_WKUP);
+
+    HWREG(SOC_PRCM_REGS + CM_PER_L3_CLKSTCTRL) |=
+                             CM_PER_L3_CLKSTCTRL_CLKTRCTRL_SW_WKUP;
+
+    while((HWREG(SOC_PRCM_REGS + CM_PER_L3_CLKSTCTRL) &
+     CM_PER_L3_CLKSTCTRL_CLKTRCTRL) != CM_PER_L3_CLKSTCTRL_CLKTRCTRL_SW_WKUP);
+
+    HWREG(SOC_PRCM_REGS + CM_PER_L3_INSTR_CLKCTRL) |=
+                             CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_ENABLE;
+while((HWREG(SOC_PRCM_REGS + CM_PER_L3_INSTR_CLKCTRL) &
+                               CM_PER_L3_INSTR_CLKCTRL_MODULEMODE) !=
+                                   CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_ENABLE);
+
+    HWREG(SOC_PRCM_REGS + CM_PER_L3_CLKCTRL) |=
+                             CM_PER_L3_CLKCTRL_MODULEMODE_ENABLE;
+
+    while((HWREG(SOC_PRCM_REGS + CM_PER_L3_CLKCTRL) &
+        CM_PER_L3_CLKCTRL_MODULEMODE) != CM_PER_L3_CLKCTRL_MODULEMODE_ENABLE);
+
+    HWREG(SOC_PRCM_REGS + CM_PER_OCPWP_L3_CLKSTCTRL) |=
+                             CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_SW_WKUP;
+
+    while((HWREG(SOC_PRCM_REGS + CM_PER_OCPWP_L3_CLKSTCTRL) &
+                              CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL) !=
+                                CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_SW_WKUP);
+
+    HWREG(SOC_PRCM_REGS + CM_PER_L4LS_CLKSTCTRL) |=
+                             CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_SW_WKUP;
+while((HWREG(SOC_PRCM_REGS + CM_PER_L4LS_CLKSTCTRL) &
+                             CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL) !=
+                               CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_SW_WKUP);
+
+    HWREG(SOC_PRCM_REGS + CM_PER_L4LS_CLKCTRL) |=
+                             CM_PER_L4LS_CLKCTRL_MODULEMODE_ENABLE;
+
+    while((HWREG(SOC_PRCM_REGS + CM_PER_L4LS_CLKCTRL) &
+      CM_PER_L4LS_CLKCTRL_MODULEMODE) != CM_PER_L4LS_CLKCTRL_MODULEMODE_ENABLE);
+
+    if(0 == instanceNum)
+    {
+        HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS0_CLKCTRL) |=
+            CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_ENABLE;
+
+        while(CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_ENABLE !=
+              (HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS0_CLKCTRL) &
+               CM_PER_EPWMSS0_CLKCTRL_MODULEMODE));
+while((CM_PER_EPWMSS0_CLKCTRL_IDLEST_FUNC <<
+               CM_PER_EPWMSS0_CLKCTRL_IDLEST_SHIFT) !=
+              (HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS0_CLKCTRL) &
+               CM_PER_EPWMSS0_CLKCTRL_IDLEST));
+
+    }
+    else if(1 == instanceNum)
+    {
+        HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS1_CLKCTRL) |=
+            CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_ENABLE;
+
+        while(CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_ENABLE !=
+              (HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS1_CLKCTRL) &
+               CM_PER_EPWMSS1_CLKCTRL_MODULEMODE));
+
+        while((CM_PER_EPWMSS1_CLKCTRL_IDLEST_FUNC <<
+               CM_PER_EPWMSS1_CLKCTRL_IDLEST_SHIFT) !=
+               (HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS1_CLKCTRL) &
+               CM_PER_EPWMSS1_CLKCTRL_IDLEST));
+
+    }
+ else if(2 == instanceNum)
+    {
+        HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS2_CLKCTRL) |=
+            CM_PER_EPWMSS2_CLKCTRL_MODULEMODE_ENABLE;
+
+        while(CM_PER_EPWMSS2_CLKCTRL_MODULEMODE_ENABLE !=
+              (HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS2_CLKCTRL) &
+               CM_PER_EPWMSS2_CLKCTRL_MODULEMODE));
+
+        while((CM_PER_EPWMSS2_CLKCTRL_IDLEST_FUNC <<
+               CM_PER_EPWMSS2_CLKCTRL_IDLEST_SHIFT) !=
+               (HWREG(SOC_PRCM_REGS + CM_PER_EPWMSS2_CLKCTRL) &
+                CM_PER_EPWMSS2_CLKCTRL_IDLEST));
+    }
+    else
+    {
+
+    }
+while(!(HWREG(SOC_PRCM_REGS + CM_PER_L3S_CLKSTCTRL) &
+            CM_PER_L3S_CLKSTCTRL_CLKACTIVITY_L3S_GCLK));
+
+    while(!(HWREG(SOC_PRCM_REGS + CM_PER_L3_CLKSTCTRL) &
+            CM_PER_L3_CLKSTCTRL_CLKACTIVITY_L3_GCLK));
+
+    while(!(HWREG(SOC_PRCM_REGS + CM_PER_OCPWP_L3_CLKSTCTRL) &
+           (CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L3_GCLK |
+            CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L4_GCLK)));
+
+    while(!(HWREG(SOC_PRCM_REGS + CM_PER_L4LS_CLKSTCTRL) &
+           (CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_L4LS_GCLK )));
+
+}
+
+/**
+ * \brief  This API configures the clock divider of the Time base module.
+ *         The clock divider can be calculated using the equation
+ *         TBCLK = SYSCLKOUT/(HSPCLKDIV × CLKDIV)
+ *
+ * \param   baseAddr      Base Address of the PWM Module Registers.
+ * \param   tbClk         Timebase clock to be generated.
+ * \param   moduleClk     Input clock of the PWM module (sysclk2)
+ *
+ * \return  None.
+ *
+ **/
+
+void EHRPWMTimebaseClkConfig(unsigned int baseAddr,
+                             unsigned int tbClk,
+                             unsigned int moduleClk)
+
+{
+    unsigned int clkDiv = moduleClk/tbClk;
+    unsigned int hspClkDiv;
+    unsigned int lspClkDiv, lspClkDivSetting = 0;
+
+    if(clkDiv > EHRPWM_TBCTL_HSPCLKDIV_14)
+    {
+        hspClkDiv = EHRPWM_TBCTL_HSPCLKDIV_DIVBY14; /* reg setting */
+        lspClkDiv = clkDiv/EHRPWM_TBCTL_HSPCLKDIV_14; /* divider */
+        /* reg setting */
+        while(lspClkDiv > 1)
+        {
+           lspClkDiv = lspClkDiv >> 1;
+           lspClkDivSetting++;
+        }
+    }
+    else
+    {
+        hspClkDiv = clkDiv/2; /* reg setting */
+        /* divide by 1 */
+        lspClkDivSetting = EHRPWM_TBCTL_HSPCLKDIV_DIVBY1;
+    }
+ HWREGH(baseAddr + EHRPWM_TBCTL) = (HWREGH(baseAddr + EHRPWM_TBCTL) &
+            (~EHRPWM_TBCTL_CLKDIV)) | ((lspClkDivSetting <<
+            EHRPWM_TBCTL_CLKDIV_SHIFT) & EHRPWM_TBCTL_CLKDIV);
+
+    HWREGH(baseAddr + EHRPWM_TBCTL) = (HWREGH(baseAddr + EHRPWM_TBCTL) &
+            (~EHRPWM_TBCTL_HSPCLKDIV)) | ((hspClkDiv <<
+            EHRPWM_TBCTL_HSPCLKDIV_SHIFT) & EHRPWM_TBCTL_HSPCLKDIV);
+}
+
+/**
+ * \brief  This API configures the PWM Frequency/Period. The period count
+ *         determines the period of the final output waveform. For the given
+ *         period count, in the case of UP and DOWN counter the count value will
+ *         be loaded as is. In the case of UP_DOWN counter the count is halfed.
+ *
+ * \param   baseAddr     Base Address of the PWM Module Registers.
+ * \param   tbClk        Timebase clock.
+ * \param   pwmFreq      Frequency of the PWM Output. If the counter direction
+ *                       is up-down this value has to be halfed, so that the
+ *                       period of the final output is equal to pwmFreq.
+ *
+ * \param   counterDir           Direction of the counter(up, down, up-down)
+ * \param   enableShadowWrite    Whether write to Period register is to be shadowed
+ *
+ * \return  None.
+ *
+ **/
+
+void EHRPWMPWMOpFreqSet(unsigned int baseAddr,
+                        unsigned int tbClk,
+                        unsigned int pwmFreq,
+                        unsigned int counterDir,
+                        bool enableShadowWrite)
+{
+     unsigned int tbPeriodCount = tbClk/pwmFreq;
+
+     HWREGH(baseAddr + EHRPWM_TBCTL) = (HWREGH(baseAddr + EHRPWM_TBCTL) &
+             (~EHRPWM_PRD_LOAD_SHADOW_MASK)) | ((enableShadowWrite <<
+            EHRPWM_TBCTL_PRDLD_SHIFT) & EHRPWM_PRD_LOAD_SHADOW_MASK);
+
+     HWREGH(baseAddr + EHRPWM_TBCTL) = (HWREGH(baseAddr + EHRPWM_TBCTL) &
+             (~EHRPWM_COUNTER_MODE_MASK)) | ((counterDir <<
+            EHRPWM_TBCTL_CTRMODE_SHIFT) &  EHRPWM_COUNTER_MODE_MASK);
+
+     if(EHRPWM_COUNT_UP_DOWN == counterDir)
+     {
+         HWREGH(baseAddr + EHRPWM_TBPRD) = (unsigned short)tbPeriodCount/2;
+     }
+     else
+     {
+         HWREGH(baseAddr + EHRPWM_TBPRD) = (unsigned short)tbPeriodCount;
+     }
+
+}
+
+void EHRPWMTimebaseSyncDisable(unsigned int baseAddr)
+{
+     HWREGH(baseAddr + EHRPWM_TBCTL) &= (~EHRPWM_SYNC_ENABLE);
+}
+
+/**
+ * \brief   This API selects the output sync source. It determines on which of
+ *          the following event sync-out has to be generated.
+ *
+ * \param   baseAddr        Base Address of the PWM Module Registers.
+ * \param   syncOutMode     Sync out mode. Possible values are,
+ *                          - EHRPWM_SYNCOUT_SYNCIN \n
+ *                          - EHRPWM_SYNCOUT_COUNTER_EQUAL_ZERO \n
+ *                          - EHRPWM_SYNCOUT_COUNTER_EQUAL_COMPAREB \n
+ *                          - EHRPWM_SYNCOUT_DISABLE \n
+ * \return  None.
+ *
+ **/
+void EHRPWMSyncOutModeSet(unsigned int baseAddr, unsigned int syncOutMode)
+{
+     HWREGH(baseAddr + EHRPWM_TBCTL) = (HWREGH(baseAddr + EHRPWM_TBCTL) &
+             (~EHRPWM_SYNCOUT_MASK)) | syncOutMode;
+}
+
+/**
+ * \brief  This API configures emulation mode. This setting determines
+ *         the behaviour of Timebase during emulation (debugging).
+ *
+ * \param   baseAddr      Base Address of the PWM Module Registers.
+ * \param   mode          Emulation mode. Possible values are,
+ *                        - EHRPWM_STOP_AFTER_NEXT_TB_INCREMENT \n
+ *                        - EHRPWM_STOP_AFTER_A_COMPLETE_CYCLE \n
+ *                        - EHRPWM_FREE_RUN \n
+ * \return  None.
+ *
+ **/
+void EHRPWMTBEmulationModeSet(unsigned int baseAddr, unsigned int mode)
+{
+     HWREGH(baseAddr + EHRPWM_TBCTL) = (HWREGH(baseAddr + EHRPWM_TBCTL) &
+         (~EHRPWM_TBCTL_FREE_SOFT)) | (mode & EHRPWM_TBCTL_FREE_SOFT);
+}
+
+/**
+ * \brief   This API loads the CMPA value. When CMPA value equals the counter
+ *          value, then an event is generated both in the up direction and
+ *          down direction.
+ *
+ * \param   baseAddr                   Base Address of the PWM Module Registers.
+ * \param   CMPAVal                    CMPA value to be loaded.
+ * \param   enableShadowWrite          Enable write to shadow register.
+ * \param   ShadowToActiveLoadTrigger  Shadow to active register load trigger.
+ * \param   OverwriteShadowFull        Overwrite even if previous value is not
+ *                                     loaded to active register.
+ *
+ * \return  bool    Flag indicates whether the CMPA value is
+ *                  written or not.
+ *
+ **/
+bool EHRPWMLoadCMPA(unsigned int baseAddr,
+                    unsigned int CMPAVal,
+                    bool enableShadowWrite,
+                    unsigned int ShadowToActiveLoadTrigger,
+                    bool OverwriteShadowFull)
+{
+    bool status = FALSE;
+
+    if((OverwriteShadowFull) ||
+        ((HWREGH(baseAddr+EHRPWM_CMPCTL) & EHRPWM_CMPCTL_SHDWAFULL) ==
+                             EHRPWM_SHADOW_A_EMPTY))
+    {
+        HWREGH(baseAddr + EHRPWM_CMPCTL) = (HWREGH(baseAddr + EHRPWM_CMPCTL) &
+            (~EHRPWM_CMPCTL_SHDWAMODE)) | ((enableShadowWrite <<
+            EHRPWM_CMPCTL_SHDWAMODE_SHIFT) & EHRPWM_CMPCTL_SHDWAMODE);
+
+        HWREGH(baseAddr + EHRPWM_CMPCTL) = (HWREGH(baseAddr + EHRPWM_CMPCTL) &
+            (~EHRPWM_COMPA_LOAD_MASK)) |((ShadowToActiveLoadTrigger <<
+            EHRPWM_CMPCTL_LOADAMODE_SHIFT) & EHRPWM_COMPA_LOAD_MASK);
+
+        HWREGH(baseAddr + EHRPWM_CMPA) = CMPAVal & EHRPWM_CMPA_CMPA;
+
+        status = TRUE;
+    }
+
+    return status;
+}
+/**
+ * \brief  This API loads the CMPB value. When CMPB value equals the counter
+ *         value, then an event is generated both in the up direction and
+ *         down direction.
+ *
+ * \param   baseAddr                   Base Address of the PWM Module Registers.
+ * \param   CMPBVal                    CMPB value to be loaded.
+ * \param   enableShadowWrite          Enable write to shadow register.
+ * \param   ShadowToActiveLoadTrigger  Shadow to active register load trigger.
+ * \param   OverwriteShadowFull        Overwrite even if previous value is not
+ *                                     loaded to active register.
+ *
+ * \return  bool   Flag indicates whether the CMPB value is
+ *                 written or not.
+ *
+ **/
+bool EHRPWMLoadCMPB(unsigned int baseAddr,
+                    unsigned int CMPBVal,
+                    bool enableShadowWrite,
+                    unsigned int ShadowToActiveLoadTrigger,
+                    bool OverwriteShadowFull)
+{
+    bool status = FALSE;
+
+    if((OverwriteShadowFull) ||
+        ((HWREGH(baseAddr+EHRPWM_CMPCTL) & EHRPWM_CMPCTL_SHDWBFULL) ==
+                             EHRPWM_SHADOW_B_EMPTY))
+    {
+        HWREGH(baseAddr + EHRPWM_CMPCTL) = (HWREGH(baseAddr + EHRPWM_CMPCTL)
+            & (~EHRPWM_CMPCTL_SHDWBMODE)) | ((enableShadowWrite <<
+            EHRPWM_CMPCTL_SHDWBMODE_SHIFT) & EHRPWM_CMPCTL_SHDWBMODE);
+
+        HWREGH(baseAddr + EHRPWM_CMPCTL) = (HWREGH(baseAddr + EHRPWM_CMPCTL) &
+            (~EHRPWM_COMPB_LOAD_MASK)) | ((ShadowToActiveLoadTrigger <<
+            EHRPWM_CMPCTL_LOADBMODE_SHIFT) & EHRPWM_COMPB_LOAD_MASK);
+
+        HWREGH(baseAddr + EHRPWM_CMPB) = CMPBVal & EHRPWM_CMPB_CMPB;
+
+        status = TRUE;
+    }
+    return status;
+}
+/**
+ * \brief  his API configures the action to be taken on B by the Action
+ *         qualifier module upon receiving the events. This will determine
+ *         the output waveform.
+ *
+ * \param   zero      Action to be taken when CTR = 0
+ * \param   period    Action to be taken when CTR = PRD
+ * \param   CAUp      Action to be taken when CTR = CAUp
+ * \param   CADown    Action to be taken when CTR = CADown
+ * \param   CBUp      Action to be taken when CTR = CBUp
+ * \param   CBDown    Action to be taken when CTR = CBDown
+ * \param   SWForced  Action to be taken when SW forced event has been generated
+ *
+ *     Possible values for the actions are
+ *         - EHRPWM_XXXX_XXXX_DONOTHING \n
+ *         - EHRPWM_XXXX_XXXX_CLEAR \n
+ *         - EHRPWM_XXXX_XXXX_SET \n
+ *         - EHRPWM_XXXX_XXXX_TOGGLE \n
+ *
+ * \return  None
+ *
+ **/
+void EHRPWMConfigureAQActionOnB(unsigned int baseAddr,
+                                unsigned int zero,
+                                unsigned int period,
+                                unsigned int CAUp,
+                                unsigned int CADown,
+                                unsigned int CBUp,
+                                unsigned int CBDown,
+                                unsigned int SWForced)
+{
+    HWREGH(baseAddr + EHRPWM_AQCTLB) =
+        ((CBDown << EHRPWM_AQCTLB_CBD_SHIFT) & EHRPWM_AQCTLB_CBD) |
+        ((CBUp << EHRPWM_AQCTLB_CBU_SHIFT) & EHRPWM_AQCTLB_CBU) |
+        ((CADown << EHRPWM_AQCTLB_CAD_SHIFT) & EHRPWM_AQCTLB_CAD) |
+        ((CAUp << EHRPWM_AQCTLB_CAU_SHIFT) & EHRPWM_AQCTLB_CAU) |
+        ((period << EHRPWM_AQCTLB_PRD_SHIFT) & EHRPWM_AQCTLB_PRD) |
+        ((zero << EHRPWM_AQCTLB_ZRO_SHIFT) & EHRPWM_AQCTLB_ZRO);
+
+
+    HWREGH(baseAddr + EHRPWM_AQSFRC) =
+        (HWREGH(baseAddr + EHRPWM_AQSFRC) & (~EHRPWM_AQSFRC_ACTSFB)) |
+     ((SWForced << EHRPWM_AQSFRC_ACTSFB_SHIFT) & EHRPWM_AQSFRC_ACTSFB);
+}
+/**
+ * \brief   This API selects output mode. This allows to selectively enable or
+ *          bypass the dead-band generation for the falling-edge and rising-edge
+ *          delay.
+ *
+ * \param   baseAddr      Base Address of the PWM Module Registers.
+ * \param   DBgenOpMode   Output mode. The possible values can be :
+ *                        - EHRPWM_DBCTL_OUT_MODE_BYPASS \n
+ *                        - EHRPWM_DBCTL_OUT_MODE_NOREDBFED \n
+ *                        - EHRPWM_DBCTL_OUT_MODE_AREDNOFED \n
+ *                        - EHRPWM_DBCTL_OUT_MODE_AREDBFED \n
+ * \return  None
+ *
+ **/
+void EHRPWMDBOutput(unsigned int baseAddr, unsigned int DBgenOpMode)
+{
+    HWREGH(baseAddr + EHRPWM_DBCTL) =
+        (HWREGH(baseAddr + EHRPWM_DBCTL) & (~EHRPWM_DBCTL_OUT_MODE)) |
+       ((DBgenOpMode << EHRPWM_DBCTL_OUT_MODE_SHIFT) & EHRPWM_DBCTL_OUT_MODE);
+}
+
+/**
+ * \brief   This API disables the PWM chopper sub-module. This will cause the
+ *          chopper module to be by-passed.
+ *
+ * \param   baseAddr    Base Address of the PWM Module Registers.
+ *
+ * \return  None
+ *
+ **/
+void EHRPWMChopperDisable(unsigned int baseAddr)
+{
+    HWREGH(baseAddr + EHRPWM_PCCTL) &= (~EHRPWM_PCCTL_CHPEN);
+}
+
+/**
+ * \brief   This API disable the trip event. The trip events will be ignored.
+ *
+ * \param   baseAddr    Base Address of the PWM Module Registers.
+ * \param   osht_CBC    Disable OST or CBC event
+ *
+ * \return  None
+ *
+ **/
+void EHRPWMTZTripEventDisable(unsigned int baseAddr, bool osht_CBC)
+{
+     if(EHRPWM_TZ_ONESHOT == osht_CBC)
+     {
+         HWREGH(baseAddr + EHRPWM_TZSEL) &= (~EHRPWM_TZSEL_OSHT1);
+     }
+     if(EHRPWM_TZ_CYCLEBYCYCLE == osht_CBC)
+     {
+         HWREGH(baseAddr + EHRPWM_TZSEL) &= (~EHRPWM_TZSEL_CBC1);
+     }
+}
+
+/**
+ * \brief   This API prescales the event on which interrupt is to be generated
+ *
+ * \param   baseAddr    Base Address of the PWM Module Registers.
+ * \param   prescale    prescalar value
+ *
+ * \return  None
+ *
+ **/
+
+void EHRPWMETIntPrescale(unsigned int baseAddr, unsigned int prescale)
+{
+    HWREGH(baseAddr + EHRPWM_ETPS) =
+        (HWREGH(baseAddr + EHRPWM_ETPS) & (~EHRPWM_ETPS_INTPRD)) |
+       ((prescale << EHRPWM_ETPS_INTPRD_SHIFT) & EHRPWM_ETPS_INTPRD);
+}
+
+/**
+ * \brief   This API selects the interrupt source.
+ *
+ * \param   baseAddr    Base Address of the PWM Module Registers.
+ * \param   selectInt   Event which triggers interrupt. The possible source can be,
+ *                      - EHRPWM_ETSEL_INTSEL_TBCTREQUZERO \n
+ *                      - EHRPWM_ETSEL_INTSEL_TBCTREQUPRD \n
+ *                      - EHRPWM_ETSEL_INTSEL_TBCTREQUCMPAINC \n
+ *                      - EHRPWM_ETSEL_INTSEL_TBCTREQUCMPADEC \n
+ *                      - EHRPWM_ETSEL_INTSEL_TBCTREQUCMPBINC \n
+ *                      - EHRPWM_ETSEL_INTSEL_TBCTREQUCMPBDEC \n
+ *
+ * \return  None
+ *
+ **/
+void EHRPWMETIntSourceSelect(unsigned int baseAddr, unsigned int selectInt)
+{
+    HWREGH(baseAddr + EHRPWM_ETSEL) =
+        (HWREGH(baseAddr + EHRPWM_ETSEL) & (~EHRPWM_ETSEL_INTSEL)) |
+       ((selectInt << EHRPWM_ETSEL_INTSEL_SHIFT) & EHRPWM_ETSEL_INTSEL);
+}
+
+/**
+ * \brief   This API disables the HR sub-module.
+ *
+ * \param   baseAddr    Base Address of the PWM Module Registers.
+ *
+ * \return  None
+ *
+ **/
+void EHRPWMHRDisable(unsigned int baseAddr)
+{
+     HWREGH(baseAddr + EHRPWM_HRCNFG) &= (~EHRPWM_HR_EDGEMODE);
+}
+
diff --git a/c/src/lib/libbsp/bfin/acinclude.m4 b/c/src/lib/libbsp/bfin/acinclude.m4
index ab6082e..828fd89 100644
--- a/c/src/lib/libbsp/bfin/acinclude.m4
+++ b/c/src/lib/libbsp/bfin/acinclude.m4
@@ -2,12 +2,12 @@
 AC_DEFUN([RTEMS_CHECK_BSPDIR],
 [
   case "$1" in
-  TLL6527M )
-    AC_CONFIG_SUBDIRS([TLL6527M]);;
   bf537Stamp )
     AC_CONFIG_SUBDIRS([bf537Stamp]);;
   eZKit533 )
     AC_CONFIG_SUBDIRS([eZKit533]);;
+  TLL6527M )
+    AC_CONFIG_SUBDIRS([TLL6527M]);;
   *)
     AC_MSG_ERROR([Invalid BSP]);;
   esac
diff --git a/c/src/lib/libbsp/powerpc/acinclude.m4 b/c/src/lib/libbsp/powerpc/acinclude.m4
index 4c83475..edc67b5 100644
--- a/c/src/lib/libbsp/powerpc/acinclude.m4
+++ b/c/src/lib/libbsp/powerpc/acinclude.m4
@@ -32,12 +32,12 @@ AC_DEFUN([RTEMS_CHECK_BSPDIR],
     AC_CONFIG_SUBDIRS([t32mppc]);;
   tqm8xx )
     AC_CONFIG_SUBDIRS([tqm8xx]);;
-  virtex )
-    AC_CONFIG_SUBDIRS([virtex]);;
   virtex4 )
     AC_CONFIG_SUBDIRS([virtex4]);;
   virtex5 )
     AC_CONFIG_SUBDIRS([virtex5]);;
+  virtex )
+    AC_CONFIG_SUBDIRS([virtex]);;
   *)
     AC_MSG_ERROR([Invalid BSP]);;
   esac
diff --git a/c/src/lib/libcpu/arm/shared/include/am335x.h b/c/src/lib/libcpu/arm/shared/include/am335x.h
index 2009cef..c2b1744 100644
--- a/c/src/lib/libcpu/arm/shared/include/am335x.h
+++ b/c/src/lib/libcpu/arm/shared/include/am335x.h
@@ -467,4 +467,2018 @@
 #define AM335X_CONF_EXT_WAKEUP 0xA00
 #define AM335X_CONF_RTC_KALDO_ENN 0xA04
 #define AM335X_CONF_USB0_DRVVBUS 0xA1C
-#define AM335X_CONF_USB1_DRVVBUS 0xA34
\ No newline at end of file
+#define AM335X_CONF_USB1_DRVVBUS 0xA34
+
+/* Added by punit vara 
+
+   PWMSS register definitions */
+
+#define PWMSS_CLOCK_CONFIG               0x08
+
+#define PWMSS_CLOCK_STATUS               0x0C
+
+#define PWMSS_ECAP_CLK_EN_ACK_SHIFT      0x00
+
+#define PWMSS_ECAP_CLK_STOP_ACK_SHIFT    0x01
+
+#define PWMSS_EHRPWM_CLK_EN_ACK_SHIFT    0x08
+
+#define PWMSS_EHRPWM_CLK_STOP_ACK_SHIFT  0x09  
+
+#define PWMSS_ECAP_CLK_EN_ACK            0x01
+
+#define PWMSS_ECAP_CLK_STOP_ACK          0x02
+
+#define PWMSS_EHRPWM_CLK_EN_ACK          0x100
+
+#define PWMSS_EHRPWM_CLK_STOP_ACK        0x200
+
+/** @brief Base addresses of PWMSS memory mapped registers.                   */
+
+#define SOC_PWMSS0_REGS                     (0x48300000)
+#define SOC_PWMSS1_REGS                     (0x48302000)
+#define SOC_PWMSS2_REGS                     (0x48304000)
+
+#define SOC_ECAP_REGS                       (0x00000100)
+#define SOC_EQEP_REGS                       (0x00000180)
+#define SOC_EPWM_REGS                       (0x00000200)
+#define SOC_ECAP_0_REGS                     (SOC_PWMSS0_REGS + SOC_ECAP_REGS)
+#define SOC_ECAP_1_REGS                     (SOC_PWMSS1_REGS + SOC_ECAP_REGS)
+#define SOC_ECAP_2_REGS                     (SOC_PWMSS2_REGS + SOC_ECAP_REGS)
+
+#define SOC_EQEP_0_REGS                     (SOC_PWMSS0_REGS + SOC_EQEP_REGS)
+#define SOC_EQEP_1_REGS                     (SOC_PWMSS1_REGS + SOC_EQEP_REGS)
+#define SOC_EQEP_2_REGS                     (SOC_PWMSS2_REGS + SOC_EQEP_REGS) 
+
+#define SOC_EPWM_0_REGS                     (SOC_PWMSS0_REGS + SOC_EPWM_REGS)
+#define SOC_EPWM_1_REGS                     (SOC_PWMSS1_REGS + SOC_EPWM_REGS)
+#define SOC_EPWM_2_REGS                     (SOC_PWMSS2_REGS + SOC_EPWM_REGS)
+#define SOC_EPWM_MODULE_FREQ                 100 
+ 
+#define SOC_CONTROL_REGS                     (0x44E10000)
+#define CONTROL_PWMSS_CTRL   (0x664)
+#define CONTROL_PWMSS_CTRL_PWMSS0_TBCLKEN   (0x00000001u)
+#define CONTROL_PWMSS_CTRL_PWMMS1_TBCLKEN   (0x00000002u)
+#define CONTROL_PWMSS_CTRL_PWMSS2_TBCLKEN   (0x00000004u)
+#define SOC_PRCM_REGS                        (0x44E00000)
+#define CM_PER_L3S_CLKSTCTRL   (0x4)
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_L3_INSTR_CLKCTRL   (0xdc)
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L3_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL   (0x12c)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_L4LS_CLKSTCTRL   (0x0)
+#define CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_EPWMSS0_CLKCTRL   (0xd4)
+#define CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_EPWMSS1_CLKCTRL   (0xcc)
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_L3S_CLKSTCTRL_CLKACTIVITY_L3S_GCLK   (0x00000008u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L3_GCLK   (0x00000010u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L4_GCLK   (0x00000020u)
+#define CM_PER_L4LS_CLKSTCTRL   (0x0)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_L4LS_GCLK   (0x00000100u)
+
+/* TBCTL */
+
+#define EHRPWM_TBCTL_FREE_SOFT  (0xC000u)
+#define EHRPWM_TBCTL_FREE_SOFT_SHIFT (0x000Eu)
+
+#define EHRPWM_TBCTL_PHSDIR     (0x2000u)
+#define EHRPWM_TBCTL_PHSDIR_SHIFT    (0x000Du)
+#define EHRPWM_TBCTL_CLKDIV     (0x1C00u)
+#define EHRPWM_TBCTL_CLKDIV_SHIFT    (0x000Au)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY1   (0x0000u)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY2   (0x0001u)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY4   (0x0002u)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY8   (0x0003u)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY16  (0x0004u)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY32  (0x0005u)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY64  (0x0006u)
+#define EHRPWM_TBCTL_CLKDIV_DIVBY128 (0x0007u)
+#define EHRPWM_TBCTL_HSPCLKDIV  (0x0380u)
+#define EHRPWM_TBCTL_HSPCLKDIV_SHIFT (0x0007u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY1 (0x0000u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY2 (0x0001u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY4 (0x0002u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY6 (0x0003u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY8 (0x0004u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY10 (0x0005u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY12 (0x0006u)
+#define EHRPWM_TBCTL_HSPCLKDIV_DIVBY14 (0x0007u)
+#define EHRPWM_TBCTL_SWFSYNC    (0x0040u)
+#define EHRPWM_TBCTL_SWFSYNC_SHIFT   (0x0006u)
+#define EHRPWM_TBCTL_SYNCOSEL   (0x0030u)
+#define EHRPWM_TBCTL_SYNCOSEL_SHIFT  (0x0004u)
+#define EHRPWM_TBCTL_SYNCOSEL_EPWMXSYNCI (0x0000u)
+#define EHRPWM_TBCTL_SYNCOSEL_TBCTRZERO (0x0001u)
+#define EHRPWM_TBCTL_SYNCOSEL_TBCTRCMPB (0x0002u)
+#define EHRPWM_TBCTL_SYNCOSEL_DISABLE   (0x0003u)
+#define EHRPWM_TBCTL_PRDLD      (0x0008u)
+#define EHRPWM_TBCTL_PRDLD_SHIFT     (0x0003u)
+#define EHRPWM_TBCTL_PHSEN      (0x0004u)
+#define EHRPWM_TBCTL_PHSEN_SHIFT     (0x0002u)
+#define EHRPWM_TBCTL_CTRMODE    (0x0003u)
+#define EHRPWM_TBCTL_CTRMODE_SHIFT   (0x0000u)
+#define EHRPWM_TBCTL_CTRMODE_UP      (0x0000u)
+#define EHRPWM_TBCTL_CTRMODE_DOWN    (0x0001u)
+#define EHRPWM_TBCTL_CTRMODE_UPDOWN  (0x0002u)
+#define EHRPWM_TBCTL_CTRMODE_STOPFREEZE (0x0003u)
+
+
+/* TBSTS */
+
+#define EHRPWM_TBSTS_CTRMAX     (0x0004u)
+#define EHRPWM_TBSTS_CTRMAX_SHIFT    (0x0002u)
+#define EHRPWM_TBSTS_SYNCI      (0x0002u)
+#define EHRPWM_TBSTS_SYNCI_SHIFT     (0x0001u)
+#define EHRPWM_TBSTS_CTRDIR     (0x0001u)
+#define EHRPWM_TBSTS_CTRDIR_SHIFT    (0x0000u)
+
+/* TBPHSHR */
+
+#define EHRPWM_TBPHSHR_TBPHSHR  (0xFF00u)
+#define EHRPWM_TBPHSHR_TBPHSHR_SHIFT (0x0008u)
+
+/* TBPHS */
+
+#define EHRPWM_TBPHS_TBPHS      (0xFFFFu)
+#define EHRPWM_TBPHS_TBPHS_SHIFT     (0x0000u)
+
+
+/* TBCTR */
+
+#define EHRPWM_TBCTR_TBCTR      (0xFFFFu)
+#define EHRPWM_TBCTR_TBCTR_SHIFT     (0x0000u)
+/* TBPRD */
+
+#define EHRPWM_TBPRD_TBPRD      (0xFFFFu)
+#define EHRPWM_TBPRD_TBPRD_SHIFT     (0x0000u)
+
+
+/* CMPCTL */
+
+#define EHRPWM_CMPCTL_SHDWBFULL (0x0200u)
+#define EHRPWM_CMPCTL_SHDWBFULL_SHIFT (0x0009u)
+#define EHRPWM_CMPCTL_SHDWAFULL (0x0100u)
+#define EHRPWM_CMPCTL_SHDWAFULL_SHIFT (0x0008u)
+#define EHRPWM_CMPCTL_SHDWBMODE (0x0040u)
+#define EHRPWM_CMPCTL_SHDWBMODE_SHIFT (0x0006u)
+#define EHRPWM_CMPCTL_SHDWAMODE (0x0010u)
+#define EHRPWM_CMPCTL_SHDWAMODE_SHIFT (0x0004u)
+#define EHRPWM_CMPCTL_LOADBMODE (0x000Cu)
+#define EHRPWM_CMPCTL_LOADBMODE_SHIFT (0x0002u)
+#define EHRPWM_CMPCTL_LOADBMODE_TBCTRZERO (0x0000u)
+#define EHRPWM_CMPCTL_LOADBMODE_TBCTRPRD (0x0001u)
+#define EHRPWM_CMPCTL_LOADBMODE_ZEROORPRD (0x0002u)
+#define EHRPWM_CMPCTL_LOADBMODE_FREEZE (0x0003u)
+#define EHRPWM_CMPCTL_LOADAMODE (0x0003u)
+#define EHRPWM_CMPCTL_LOADAMODE_SHIFT (0x0000u)
+#define EHRPWM_CMPCTL_LOADAMODE_TBCTRZERO (0x0000u)
+#define EHRPWM_CMPCTL_LOADAMODE_TBCTRPRD (0x0001u)
+#define EHRPWM_CMPCTL_LOADAMODE_ZEROORPRD (0x0002u)
+#define EHRPWM_CMPCTL_LOADAMODE_FREEZE (0x0003u)
+
+
+/* CMPAHR */
+
+#define EHRPWM_CMPAHR_CMPAHR    (0xFF00u)
+#define EHRPWM_CMPAHR_CMPAHR_SHIFT   (0x0008u)
+
+
+/* CMPA */
+
+#define EHRPWM_CMPA_CMPA        (0xFFFFu)
+#define EHRPWM_CMPA_CMPA_SHIFT       (0x0000u)
+
+
+/* CMPB */
+
+#define EHRPWM_CMPB_CMPB        (0xFFFFu)
+#define EHRPWM_CMPB_CMPB_SHIFT       (0x0000u)
+
+
+/* AQCTLA */
+
+#define EHRPWM_AQCTLA_CBD       (0x0C00u)
+#define EHRPWM_AQCTLA_CBD_SHIFT      (0x000Au)
+#define EHRPWM_AQCTLA_CBD_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLA_CBD_EPWMXALOW  (0x0001u)
+#define EHRPWM_AQCTLA_CBD_EPWMXAHIGH (0x0002u)
+#define EHRPWM_AQCTLA_CBD_EPWMXATOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLA_CBU       (0x0300u)
+#define EHRPWM_AQCTLA_CBU_SHIFT      (0x0008u)
+#define EHRPWM_AQCTLA_CBU_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLA_CBU_EPWMXALOW  (0x0001u)
+#define EHRPWM_AQCTLA_CBU_EPWMXAHIGH (0x0002u)
+#define EHRPWM_AQCTLA_CBU_EPWMXATOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLA_CAD       (0x00C0u)
+#define EHRPWM_AQCTLA_CAD_SHIFT      (0x0006u)
+#define EHRPWM_AQCTLA_CAD_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLA_CAD_EPWMXALOW  (0x0001u)
+#define EHRPWM_AQCTLA_CAD_EPWMXAHIGH (0x0002u)
+#define EHRPWM_AQCTLA_CAD_EPWMXATOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLA_CAU       (0x0030u)
+#define EHRPWM_AQCTLA_CAU_SHIFT      (0x0004u)
+#define EHRPWM_AQCTLA_CAU_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLA_CAU_EPWMXALOW  (0x0001u)
+#define EHRPWM_AQCTLA_CAU_EPWMXAHIGH (0x0002u)
+#define EHRPWM_AQCTLA_CAU_EPWMXATOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLA_PRD       (0x000Cu)
+#define EHRPWM_AQCTLA_PRD_SHIFT      (0x0002u)
+#define EHRPWM_AQCTLA_PRD_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLA_PRD_EPWMXALOW  (0x0001u)
+#define EHRPWM_AQCTLA_PRD_EPWMXAHIGH (0x0002u)
+#define EHRPWM_AQCTLA_PRD_EPWMXATOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLA_ZRO       (0x0003u)
+#define EHRPWM_AQCTLA_ZRO_SHIFT      (0x0000u)
+#define EHRPWM_AQCTLA_ZRO_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLA_ZRO_EPWMXALOW  (0x0001u)
+#define EHRPWM_AQCTLA_ZRO_EPWMXAHIGH (0x0002u)
+#define EHRPWM_AQCTLA_ZRO_EPWMXATOGGLE (0x0003u)
+
+
+/* AQCTLB */
+
+#define EHRPWM_AQCTLB_CBD       (0x0C00u)
+#define EHRPWM_AQCTLB_CBD_SHIFT      (0x000Au)
+#define EHRPWM_AQCTLB_CBD_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLB_CBD_EPWMXBLOW  (0x0001u)
+#define EHRPWM_AQCTLB_CBD_EPWMXBHIGH (0x0002u)
+#define EHRPWM_AQCTLB_CBD_EPWMXBTOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLB_CBU       (0x0300u)
+#define EHRPWM_AQCTLB_CBU_SHIFT      (0x0008u)
+#define EHRPWM_AQCTLB_CBU_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLB_CBU_EPWMXBLOW  (0x0001u)
+#define EHRPWM_AQCTLB_CBU_EPWMXBHIGH (0x0002u)
+#define EHRPWM_AQCTLB_CBU_EPWMXBTOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLB_CAD       (0x00C0u)
+#define EHRPWM_AQCTLB_CAD_SHIFT      (0x0006u)
+#define EHRPWM_AQCTLB_CAD_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLB_CAD_EPWMXBLOW  (0x0001u)
+#define EHRPWM_AQCTLB_CAD_EPWMXBHIGH (0x0002u)
+#define EHRPWM_AQCTLB_CAD_EPWMXBTOGGLE (0x0003u)
+#define EHRPWM_AQCTLB_CAU       (0x0030u)
+#define EHRPWM_AQCTLB_CAU_SHIFT      (0x0004u)
+#define EHRPWM_AQCTLB_CAU_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLB_CAU_EPWMXBLOW  (0x0001u)
+#define EHRPWM_AQCTLB_CAU_EPWMXBHIGH (0x0002u)
+#define EHRPWM_AQCTLB_CAU_EPWMXBTOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLB_PRD       (0x000Cu)
+#define EHRPWM_AQCTLB_PRD_SHIFT      (0x0002u)
+#define EHRPWM_AQCTLB_PRD_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLB_PRD_EPWMXBLOW  (0x0001u)
+#define EHRPWM_AQCTLB_PRD_EPWMXBHIGH (0x0002u)
+#define EHRPWM_AQCTLB_PRD_EPWMXBTOGGLE (0x0003u)
+
+#define EHRPWM_AQCTLB_ZRO       (0x0003u)
+#define EHRPWM_AQCTLB_ZRO_SHIFT      (0x0000u)
+#define EHRPWM_AQCTLB_ZRO_DONOTHING  (0x0000u)
+#define EHRPWM_AQCTLB_ZRO_EPWMXBLOW  (0x0001u)
+#define EHRPWM_AQCTLB_ZRO_EPWMXBHIGH (0x0002u)
+#define EHRPWM_AQCTLB_ZRO_EPWMXBTOGGLE (0x0003u)
+
+
+/* AQSFRC */
+
+#define EHRPWM_AQSFRC_RLDCSF    (0x00C0u)
+#define EHRPWM_AQSFRC_RLDCSF_SHIFT   (0x0006u)
+#define EHRPWM_AQSFRC_RLDCSF_EVTCTRZERO (0x0000u)
+#define EHRPWM_AQSFRC_RLDCSF_EVTCTRPRD (0x0001u)
+#define EHRPWM_AQSFRC_RLDCSF_ZEROORPRD (0x0002u)
+#define EHRPWM_AQSFRC_RLDCSF_IMMEDIATE (0x0003u)
+
+#define EHRPWM_AQSFRC_OTSFB     (0x0020u)
+#define EHRPWM_AQSFRC_OTSFB_SHIFT    (0x0005u)
+#define EHRPWM_AQSFRC_OTSFB_NOEFFECT (0x0000u)
+#define EHRPWM_AQSFRC_OTSFB_EVENT    (0x0001u)
+
+#define EHRPWM_AQSFRC_ACTSFB    (0x0018u)
+#define EHRPWM_AQSFRC_ACTSFB_SHIFT   (0x0003u)
+#define EHRPWM_AQSFRC_ACTSFB_DONOTHING (0x0000u)
+#define EHRPWM_AQSFRC_ACTSFB_CLEAR   (0x0001u)
+#define EHRPWM_AQSFRC_ACTSFB_SET     (0x0002u)
+#define EHRPWM_AQSFRC_ACTSFB_TOGGLE  (0x0003u)
+
+#define EHRPWM_AQSFRC_OTSFA     (0x0004u)
+#define EHRPWM_AQSFRC_OTSFA_SHIFT    (0x0002u)
+#define EHRPWM_AQSFRC_OTSFA_NOEFFECT (0x0000u)
+#define EHRPWM_AQSFRC_OTSFA_EVENT    (0x0001u)
+
+#define EHRPWM_AQSFRC_ACTSFA    (0x0003u)
+#define EHRPWM_AQSFRC_ACTSFA_SHIFT   (0x0000u)
+#define EHRPWM_AQSFRC_ACTSFA_DONOTHING (0x0000u)
+#define EHRPWM_AQSFRC_ACTSFA_CLEAR   (0x0001u)
+#define EHRPWM_AQSFRC_ACTSFA_SET     (0x0002u)
+#define EHRPWM_AQSFRC_ACTSFA_TOGGLE  (0x0003u)
+
+
+/* AQCSFRC */
+
+#define EHRPWM_AQCSFRC_CSFB     (0x000Cu)
+#define EHRPWM_AQCSFRC_CSFB_SHIFT    (0x0002u)
+#define EHRPWM_AQCSFRC_CSFB_LOW      (0x0001u)
+#define EHRPWM_AQCSFRC_CSFB_HIGH     (0x0002u)
+
+#define EHRPWM_AQCSFRC_CSFA     (0x0003u)
+#define EHRPWM_AQCSFRC_CSFA_SHIFT    (0x0000u)
+#define EHRPWM_AQCSFRC_CSFA_LOW      (0x0001u)
+#define EHRPWM_AQCSFRC_CSFA_HIGH     (0x0002u)
+
+
+/* DBCTL */
+
+#define EHRPWM_DBCTL_IN_MODE    (0x0030u)
+#define EHRPWM_DBCTL_IN_MODE_SHIFT   (0x0004u)
+#define EHRPWM_DBCTL_IN_MODE_AREDAFED (0x0000u)
+#define EHRPWM_DBCTL_IN_MODE_BREDAFED (0x0001u)
+#define EHRPWM_DBCTL_IN_MODE_AREDBFED (0x0002u)
+#define EHRPWM_DBCTL_IN_MODE_BREDBFED (0x0003u)
+#define EHRPWM_DBCTL_POLSEL     (0x000Cu)
+#define EHRPWM_DBCTL_POLSEL_SHIFT    (0x0002u)
+#define EHRPWM_DBCTL_POLSEL_ACTIVEHIGH (0x0000u)
+#define EHRPWM_DBCTL_POLSEL_ALC      (0x0001u)
+#define EHRPWM_DBCTL_POLSEL_AHC      (0x0002u)
+#define EHRPWM_DBCTL_POLSEL_ACTIVELOW (0x0003u)
+
+#define EHRPWM_DBCTL_OUT_MODE   (0x0003u)
+#define EHRPWM_DBCTL_OUT_MODE_SHIFT  (0x0000u)
+#define EHRPWM_DBCTL_OUT_MODE_BYPASS (0x0000u)
+#define EHRPWM_DBCTL_OUT_MODE_NOREDBFED (0x0001u)
+#define EHRPWM_DBCTL_OUT_MODE_AREDNOFED (0x0002u)
+#define EHRPWM_DBCTL_OUT_MODE_AREDBFED (0x0003u)
+
+
+/* DBRED */
+
+#define EHRPWM_DBRED_DEL        (0x03FFu)
+#define EHRPWM_DBRED_DEL_SHIFT       (0x0000u)
+
+
+/* DBFED */
+
+#define EHRPWM_DBFED_DEL        (0x03FFu)
+#define EHRPWM_DBFED_DEL_SHIFT       (0x0000u)
+
+
+/* TZSEL */
+
+#define EHRPWM_TZSEL_OSHT1      (0x0100u)
+#define EHRPWM_TZSEL_OSHT1_SHIFT     (0x0008u)
+
+
+#define EHRPWM_TZSEL_CBC1       (0x0001u)
+#define EHRPWM_TZSEL_CBC1_SHIFT      (0x0000u)
+/* TZCTL */
+
+#define EHRPWM_TZCTL_TZB        (0x000Cu)
+#define EHRPWM_TZCTL_TZB_SHIFT       (0x0002u)
+#define EHRPWM_TZCTL_TZB_TRISTATE    (0x0000u)
+#define EHRPWM_TZCTL_TZB_FORCEHIGH   (0x0001u)
+#define EHRPWM_TZCTL_TZB_FORCELOW    (0x0002u)
+#define EHRPWM_TZCTL_TZB_DONOTHING   (0x0003u)
+
+#define EHRPWM_TZCTL_TZA        (0x0003u)
+#define EHRPWM_TZCTL_TZA_SHIFT       (0x0000u)
+#define EHRPWM_TZCTL_TZA_TRISTATE    (0x0000u)
+#define EHRPWM_TZCTL_TZA_FORCEHIGH   (0x0001u)
+#define EHRPWM_TZCTL_TZA_FORCELOW    (0x0002u)
+#define EHRPWM_TZCTL_TZA_DONOTHING   (0x0003u)
+
+
+/* TZEINT */
+
+#define EHRPWM_TZEINT_OST       (0x0004u)
+#define EHRPWM_TZEINT_OST_SHIFT      (0x0002u)
+
+#define EHRPWM_TZEINT_CBC       (0x0002u)
+#define EHRPWM_TZEINT_CBC_SHIFT      (0x0001u)
+
+
+
+/* TZFLG */
+
+#define EHRPWM_TZFLG_OST        (0x0004u)
+#define EHRPWM_TZFLG_OST_SHIFT       (0x0002u)
+#define EHRPWM_TZFLG_CBC        (0x0002u)
+#define EHRPWM_TZFLG_CBC_SHIFT       (0x0001u)
+#define EHRPWM_TZFLG_INT        (0x0001u)
+#define EHRPWM_TZFLG_INT_SHIFT       (0x0000u)
+/* TZCLR */
+
+#define EHRPWM_TZCLR_OST        (0x0004u)
+#define EHRPWM_TZCLR_OST_SHIFT       (0x0002u)
+#define EHRPWM_TZCLR_CBC        (0x0002u)
+#define EHRPWM_TZCLR_CBC_SHIFT       (0x0001u)
+#define EHRPWM_TZCLR_INT        (0x0001u)
+#define EHRPWM_TZCLR_INT_SHIFT       (0x0000u)
+
+/* TZFRC */
+
+#define EHRPWM_TZFRC_OST        (0x0004u)
+#define EHRPWM_TZFRC_OST_SHIFT       (0x0002u)
+#define EHRPWM_TZFRC_CBC        (0x0002u)
+#define EHRPWM_TZFRC_CBC_SHIFT       (0x0001u)
+
+
+/* ETSEL */
+
+#define EHRPWM_ETSEL_INTEN      (0x0008u)
+#define EHRPWM_ETSEL_INTEN_SHIFT     (0x0003u)
+
+#define EHRPWM_ETSEL_INTSEL     (0x0007u)
+#define EHRPWM_ETSEL_INTSEL_SHIFT    (0x0000u)
+#define EHRPWM_ETSEL_INTSEL_TBCTREQUZERO (0x0001u)
+#define EHRPWM_ETSEL_INTSEL_TBCTREQUPRD (0x0002u)
+#define EHRPWM_ETSEL_INTSEL_TBCTREQUCMPAINC (0x0004u)
+#define EHRPWM_ETSEL_INTSEL_TBCTREQUCMPADEC (0x0005u)
+#define EHRPWM_ETSEL_INTSEL_TBCTREQUCMPBINC (0x0006u)
+#define EHRPWM_ETSEL_INTSEL_TBCTREQUCMPBDEC (0x0007u)
+/* ETPS */
+
+#define EHRPWM_ETPS_INTCNT      (0x000Cu)
+#define EHRPWM_ETPS_INTCNT_SHIFT     (0x0002u)
+#define EHRPWM_ETPS_INTCNT_NOEVENTS  (0x0000u)
+#define EHRPWM_ETPS_INTCNT_ONEEVENT  (0x0001u)
+#define EHRPWM_ETPS_INTCNT_TWOEVENTS (0x0002u)
+#define EHRPWM_ETPS_INTCNT_THREEEVENTS (0x0003u)
+
+#define EHRPWM_ETPS_INTPRD      (0x0003u)
+#define EHRPWM_ETPS_INTPRD_SHIFT     (0x0000u)
+#define EHRPWM_ETPS_INTPRD_FIRSTEVENT (0x0001u)
+#define EHRPWM_ETPS_INTPRD_SECONDEVENT (0x0002u)
+#define EHRPWM_ETPS_INTPRD_THIRDEVENT (0x0003u)
+
+
+/* ETFLG */
+
+#define EHRPWM_ETFLG_INT        (0x0001u)
+#define EHRPWM_ETFLG_INT_SHIFT       (0x0000u)
+
+/* ETCLR */
+
+#define EHRPWM_ETCLR_INT        (0x0001u)
+#define EHRPWM_ETCLR_INT_SHIFT       (0x0000u)
+#define EHRPWM_ETCLR_INT_NOEFFECT    (0x0000u)
+#define EHRPWM_ETCLR_INT_CLEAR       (0x0001u)
+
+
+/* ETFRC */
+
+#define EHRPWM_ETFRC_INT        (0x0001u)
+#define EHRPWM_ETFRC_INT_SHIFT       (0x0000u)
+
+/* PCCTL */
+
+#define EHRPWM_PCCTL_CHPDUTY    (0x0700u)
+#define EHRPWM_PCCTL_CHPDUTY_SHIFT   (0x0008u)
+#define EHRPWM_PCCTL_CHPDUTY_1DIV8   (0x0000u)
+#define EHRPWM_PCCTL_CHPDUTY_2DIV8   (0x0001u)
+#define EHRPWM_PCCTL_CHPDUTY_3DIV8   (0x0002u)
+#define EHRPWM_PCCTL_CHPDUTY_4DIV8   (0x0003u)
+#define EHRPWM_PCCTL_CHPDUTY_5DIV8   (0x0004u)
+#define EHRPWM_PCCTL_CHPDUTY_6DIV8   (0x0005u)
+#define EHRPWM_PCCTL_CHPDUTY_7DIV8   (0x0006u)
+#define EHRPWM_PCCTL_CHPDUTY_RESERVED (0x0007u)
+
+#define EHRPWM_PCCTL_CHPFREQ    (0x00E0u)
+#define EHRPWM_PCCTL_CHPFREQ_SHIFT   (0x0005u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY1  (0x0000u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY2  (0x0001u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY3  (0x0002u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY4  (0x0003u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY5  (0x0004u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY6  (0x0005u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY7  (0x0006u)
+#define EHRPWM_PCCTL_CHPFREQ_DIVBY8  (0x0007u)
+
+#define EHRPWM_PCCTL_OSHTWTH    (0x001Eu)
+#define EHRPWM_PCCTL_OSHTWTH_SHIFT   (0x0001u)
+
+#define EHRPWM_PCCTL_CHPEN      (0x0001u)
+#define EHRPWM_PCCTL_CHPEN_SHIFT     (0x0000u)
+
+/* HR */
+
+#define EHRPWM_HR_HRLOAD                (0x0008u)
+#define EHRPWM_HR_HRLOAD_SHIFT          (0x0003u)
+#define EHRPWM_HR_HRLOAD_CTR_ZERO       (0x0000u)
+#define EHRPWM_HR_HRLOAD_CTR_PRD        (0x0008u)
+
+#define EHRPWM_HR_CTLMODE               (0x0004u)
+#define EHRPWM_HR_CTLMODE_SHIFT         (0x0002u)
+#define EHRPWM_HR_CTLMODE_CMPAHR        (0x0000u)
+#define EHRPWM_HR_CTLMODE_TBPHSHR       (0x0004u)
+
+#define EHRPWM_HR_EDGEMODE              (0x0003u)
+#define EHRPWM_HR_EDGEMODE_SHIFT        (0x0000u)
+#define EHRPWM_HR_EDGEMODE_DISABLE      (0x0000u)
+#define EHRPWM_HR_EDGEMODE_RAISING      (0x0001u)
+#define EHRPWM_HR_EDGEMODE_FALLING      (0x0002u)
+#define EHRPWM_HR_EDGEMODE_BOTH         (0x0003u)
+
+
+/* REVID */
+
+#define EHRPWM_REVID_REV        (0xFFFFFFFFu)
+#define EHRPWM_REVID_REV_SHIFT       (0x00000000u)
+
+#define EHRPWM_TBCTL            (0x0)
+#define EHRPWM_TBSTS            (0x2)
+#define EHRPWM_TBPHSHR          (0x4)
+#define EHRPWM_TBPHS            (0x6)
+#define EHRPWM_TBCTR            (0x8)
+#define EHRPWM_TBPRD            (0xA)
+#define EHRPWM_CMPCTL           (0xE)
+#define EHRPWM_CMPAHR           (0x10)
+#define EHRPWM_CMPA             (0x12)
+#define EHRPWM_CMPB             (0x14)
+#define EHRPWM_AQCTLA           (0x16)
+#define EHRPWM_AQCTLB           (0x18)
+#define EHRPWM_AQSFRC           (0x1A)
+#define EHRPWM_AQCSFRC          (0x1C)
+#define EHRPWM_DBCTL            (0x1E)
+#define EHRPWM_DBRED            (0x20)
+#define EHRPWM_DBFED            (0x22)
+#define EHRPWM_TZSEL            (0x24)
+#define EHRPWM_TZCTL            (0x28)
+#define EHRPWM_TZEINT           (0x2A)
+#define EHRPWM_TZFLG            (0x2C)
+#define EHRPWM_TZCLR            (0x2E)
+#define EHRPWM_TZFRC            (0x30)
+#define EHRPWM_ETSEL            (0x32)
+#define EHRPWM_ETPS             (0x34)
+#define EHRPWM_ETFLG            (0x36)
+#define EHRPWM_ETCLR            (0x38)
+#define EHRPWM_ETFRC            (0x3A)
+#define EHRPWM_PCCTL            (0x3C)
+#define EHRPWM_HRCNFG           (0x1040)
+
+#define CM_PER_L3_CLKSTCTRL   (0xc)
+
+/* TB Period load */
+#define EHRPWM_PRD_LOAD_SHADOW_MASK             EHRPWM_TBCTL_PRDLD
+
+/* Counter mode */
+#define EHRPWM_COUNTER_MODE_MASK                EHRPWM_TBCTL_CTRMODE 
+#define EHRPWM_COUNT_UP                         (EHRPWM_TBCTL_CTRMODE_UP << \
+                                                        EHRPWM_TBCTL_CTRMODE_SHIFT)
+#define EHRPWM_COUNT_DOWN                       (EHRPWM_TBCTL_CTRMODE_DOWN << \
+                                                        EHRPWM_TBCTL_CTRMODE_SHIFT)
+#define EHRPWM_COUNT_UP_DOWN                    (EHRPWM_TBCTL_CTRMODE_UPDOWN << \
+                                                        EHRPWM_TBCTL_CTRMODE_SHIFT)
+#define EHRPWM_COUNT_STOP                       (EHRPWM_TBCTL_CTRMODE_STOPFREEZE << \
+                                                        EHRPWM_TBCTL_CTRMODE_SHIFT)
+/* Synchronization */
+#define EHRPWM_SYNC_ENABLE                      EHRPWM_TBCTL_PHSEN
+//#define EHRPWM_SW_FORCED_SYNC                 0x1
+
+#define EHRPWM_SYNCOUT_MASK                     EHRPWM_TBCTL_SYNCOSEL   
+#define EHRPWM_SYNCOUT_SYNCIN                   (EHRPWM_TBCTL_SYNCOSEL_EPWMXSYNCI << \
+                                                        EHRPWM_TBCTL_SYNCOSEL_SHIFT)
+#define EHRPWM_SYNCOUT_COUNTER_EQUAL_ZERO       (EHRPWM_TBCTL_SYNCOSEL_TBCTRZERO << \
+                                                        EHRPWM_TBCTL_SYNCOSEL_SHIFT)
+#define EHRPWM_SYNCOUT_COUNTER_EQUAL_COMPAREB   (EHRPWM_TBCTL_SYNCOSEL_TBCTRCMPB << \
+                                                        EHRPWM_TBCTL_SYNCOSEL_SHIFT)
+#define EHRPWM_SYNCOUT_DISABLE                  (EHRPWM_TBCTL_SYNCOSEL_DISABLE << \
+                                                        EHRPWM_TBCTL_SYNCOSEL_SHIFT)
+/* Shadow */
+#define EHRPWM_SHADOW_WRITE_ENABLE              0x0
+#define EHRPWM_SHADOW_WRITE_DISABLE             0x1
+
+/* Emulation mode */
+#define EHRPWM_STOP_AFTER_NEXT_TB_INCREMENT     (0x0 << EHRPWM_TBCTL_FREE_SOFT_SHIFT)
+#define EHRPWM_STOP_AFTER_A_COMPLETE_CYCLE      (0x1 << EHRPWM_TBCTL_FREE_SOFT_SHIFT)
+#define EHRPWM_FREE_RUN                         (0x2 << EHRPWM_TBCTL_FREE_SOFT_SHIFT)
+
+/* Time base clock */
+#define EHRPWM_TBCTL_CLKDIV_1                   (0x0001u)
+#define EHRPWM_TBCTL_CLKDIV_2                   (0x0002u)
+#define EHRPWM_TBCTL_CLKDIV_4                   (0x0004u)
+#define EHRPWM_TBCTL_CLKDIV_8                   (0x0008u)
+#define EHRPWM_TBCTL_CLKDIV_16                  (0x0010u)
+#define EHRPWM_TBCTL_CLKDIV_32                  (0x0020u)
+#define EHRPWM_TBCTL_CLKDIV_64                  (0x0040u)
+#define EHRPWM_TBCTL_CLKDIV_128                 (0x0080u)
+
+#define EHRPWM_TBCTL_HSPCLKDIV_1                (0x0001u)
+#define EHRPWM_TBCTL_HSPCLKDIV_2                (0x0002u)
+#define EHRPWM_TBCTL_HSPCLKDIV_4                (0x0004u)
+#define EHRPWM_TBCTL_HSPCLKDIV_6                (0x0006u)
+#define EHRPWM_TBCTL_HSPCLKDIV_8                (0x0008u)
+#define EHRPWM_TBCTL_HSPCLKDIV_10               (0x000Au)
+#define EHRPWM_TBCTL_HSPCLKDIV_12               (0x000Cu)
+#define EHRPWM_TBCTL_HSPCLKDIV_14               (0x000Eu)
+
+/* Count direction after sync */
+#define EHRPWM_COUNT_DOWN_AFTER_SYNC            0x0
+#define EHRPWM_COUNT_UP_AFTER_SYNC              0x1
+/* Counter Compare */
+#define EHRPWM_SHADOW_A_EMPTY                   (0x0 << EHRPWM_CMPCTL_SHDWAFULL_SHIFT)
+#define EHRPWM_SHADOW_A_FULL                    (EHRPWM_CMPCTL_SHDWAFULL)
+#define EHRPWM_SHADOW_B_EMPTY                   (0x0 << EHRPWM_CMPCTL_SHDWBFULL_SHIFT)
+#define EHRPWM_SHADOW_B_FULL                    (EHRPWM_CMPCTL_SHDWBFULL)
+
+#define EHRPWM_CMPCTL_NOT_OVERWR_SH_FL          0x0
+#define EHRPWM_CMPCTL_OVERWR_SH_FL              0x1
+
+/* Compare register load */
+#define EHRPWM_COMPB_LOAD_MASK                  EHRPWM_CMPCTL_LOADBMODE
+#define EHRPWM_COMPB_LOAD_COUNT_EQUAL_ZERO      (EHRPWM_CMPCTL_LOADBMODE_TBCTRZERO << \
+                                                        EHRPWM_CMPCTL_LOADBMODE_SHIFT)
+#define EHRPWM_COMPB_LOAD_COUNT_EQUAL_PERIOD    (EHRPWM_CMPCTL_LOADBMODE_TBCTRPRD << \
+                                                        EHRPWM_CMPCTL_LOADBMODE_SHIFT)
+#define EHRPWM_COMPB_LOAD_COUNT_EQUAL_ZERO_OR_PERIOD \
+                                                (EHRPWM_CMPCTL_LOADBMODE_ZEROORPRD << \
+                                                        EHRPWM_CMPCTL_LOADBMODE_SHIFT)
+#define EHRPWM_COMPB_NO_LOAD                    (EHRPWM_CMPCTL_LOADBMODE_FREEZE << \
+                                                        EHRPWM_CMPCTL_LOADBMODE_SHIFT)
+
+
+#define EHRPWM_COMPA_LOAD_MASK                  EHRPWM_CMPCTL_LOADAMODE
+#define EHRPWM_COMPA_LOAD_COUNT_EQUAL_ZERO      (EHRPWM_CMPCTL_LOADAMODE_TBCTRZERO << \
+                                                        EHRPWM_CMPCTL_LOADAMODE_SHIFT)
+#define EHRPWM_COMPA_LOAD_COUNT_EQUAL_PERIOD    (EHRPWM_CMPCTL_LOADAMODE_TBCTRPRD << \
+                                                        EHRPWM_CMPCTL_LOADAMODE_SHIFT)
+#define EHRPWM_COMPA_LOAD_COUNT_EQUAL_ZERO_OR_PERIOD \
+                                                (EHRPWM_CMPCTL_LOADAMODE_ZEROORPRD << \
+                                                        EHRPWM_CMPCTL_LOADAMODE_SHIFT)                                           
+#define EHRPWM_COMPA_NO_LOAD                    (EHRPWM_CMPCTL_LOADAMODE_FREEZE << \
+                                                        EHRPWM_CMPCTL_LOADAMODE_SHIFT)
+/* Chopper */
+#define EHRPWM_CHP_DUTY_12_5_PER                EHRPWM_PCCTL_CHPDUTY_1DIV8
+#define EHRPWM_CHP_DUTY_25_PER                  EHRPWM_PCCTL_CHPDUTY_2DIV8
+#define EHRPWM_CHP_DUTY_37_5_PER                EHRPWM_PCCTL_CHPDUTY_3DIV8
+#define EHRPWM_CHP_DUTY_50_PER                  EHRPWM_PCCTL_CHPDUTY_4DIV8
+#define EHRPWM_CHP_DUTY_62_5_PER                EHRPWM_PCCTL_CHPDUTY_5DIV8
+#define EHRPWM_CHP_DUTY_75_PER                  EHRPWM_PCCTL_CHPDUTY_6DIV8
+#define EHRPWM_CHP_DUTY_87_5_PER                EHRPWM_PCCTL_CHPDUTY_7DIV8
+
+/* TZ */
+#define EHRPWM_TZ_ONESHOT                       0x0
+#define EHRPWM_TZ_CYCLEBYCYCLE                  0x1
+#define EHRPWM_TZ_ONESHOT_CLEAR                 (EHRPWM_TZCLR_OST | EHRPWM_TZCLR_INT)
+#define EHRPWM_TZ_CYCLEBYCYCLE_CLEAR            (EHRPWM_TZCLR_CBC | EHRPWM_TZCLR_INT)
+
+#define  ECAP   0x01
+#define  EPWM   0x02
+#define  EQEP   0x03
+
+#define CM_PER_L4LS_CLKSTCTRL   (0x0)
+#define CM_PER_L3S_CLKSTCTRL   (0x4)
+#define CM_PER_L4FW_CLKSTCTRL   (0x8)
+#define CM_PER_L3_CLKSTCTRL   (0xc)
+#define CM_PER_CPGMAC0_CLKCTRL   (0x14)
+#define CM_PER_LCDC_CLKCTRL   (0x18)
+#define CM_PER_USB0_CLKCTRL   (0x1c)
+#define CM_PER_MLB_CLKCTRL   (0x20)
+#define CM_PER_TPTC0_CLKCTRL   (0x24)
+#define CM_PER_EMIF_CLKCTRL   (0x28)
+#define CM_PER_OCMCRAM_CLKCTRL   (0x2c)
+#define CM_PER_GPMC_CLKCTRL   (0x30)
+#define CM_PER_MCASP0_CLKCTRL   (0x34)
+#define CM_PER_UART5_CLKCTRL   (0x38)
+#define CM_PER_MMC0_CLKCTRL   (0x3c)
+#define CM_PER_ELM_CLKCTRL   (0x40)
+#define CM_PER_I2C2_CLKCTRL   (0x44)
+#define CM_PER_I2C1_CLKCTRL   (0x48)
+#define CM_PER_SPI0_CLKCTRL   (0x4c)
+#define CM_PER_SPI1_CLKCTRL   (0x50)
+#define CM_PER_L4LS_CLKCTRL   (0x60)
+#define CM_PER_L4FW_CLKCTRL   (0x64)
+#define CM_PER_MCASP1_CLKCTRL   (0x68)
+#define CM_PER_UART1_CLKCTRL   (0x6c)
+#define CM_PER_UART2_CLKCTRL   (0x70)
+#define CM_PER_UART3_CLKCTRL   (0x74)
+#define CM_PER_UART4_CLKCTRL   (0x78)
+#define CM_PER_TIMER7_CLKCTRL   (0x7c)
+#define CM_PER_TIMER2_CLKCTRL   (0x80)
+#define CM_PER_TIMER3_CLKCTRL   (0x84)
+#define CM_PER_TIMER4_CLKCTRL   (0x88)
+#define CM_PER_RNG_CLKCTRL   (0x90)
+#define CM_PER_AES0_CLKCTRL   (0x94)
+#define CM_PER_SHA0_CLKCTRL   (0xa0)
+#define CM_PER_PKA_CLKCTRL   (0xa4)
+#define CM_PER_GPIO6_CLKCTRL   (0xa8)
+#define CM_PER_GPIO1_CLKCTRL   (0xac)
+#define CM_PER_GPIO2_CLKCTRL   (0xb0)
+#define CM_PER_GPIO3_CLKCTRL   (0xb4)
+#define CM_PER_TPCC_CLKCTRL   (0xbc)
+#define CM_PER_DCAN0_CLKCTRL   (0xc0)
+#define CM_PER_DCAN1_CLKCTRL   (0xc4)
+#define CM_PER_EPWMSS1_CLKCTRL   (0xcc)
+#define CM_PER_EMIF_FW_CLKCTRL   (0xd0)
+#define CM_PER_EPWMSS0_CLKCTRL   (0xd4)
+#define CM_PER_EPWMSS2_CLKCTRL   (0xd8)
+#define CM_PER_L3_INSTR_CLKCTRL   (0xdc)
+#define CM_PER_L3_CLKCTRL   (0xe0)
+#define CM_PER_IEEE5000_CLKCTRL   (0xe4)
+#define CM_PER_ICSS_CLKCTRL   (0xe8)
+#define CM_PER_TIMER5_CLKCTRL   (0xec)
+#define CM_PER_TIMER6_CLKCTRL   (0xf0)
+#define CM_PER_MMC1_CLKCTRL   (0xf4)
+#define CM_PER_MMC2_CLKCTRL   (0xf8)
+#define CM_PER_TPTC1_CLKCTRL   (0xfc)
+#define CM_PER_TPTC2_CLKCTRL   (0x100)
+#define CM_PER_SPINLOCK_CLKCTRL   (0x10c)
+#define CM_PER_MAILBOX0_CLKCTRL   (0x110)
+#define CM_PER_L4HS_CLKSTCTRL   (0x11c)
+#define CM_PER_L4HS_CLKCTRL   (0x120)
+#define CM_PER_MSTR_EXPS_CLKCTRL   (0x124)
+#define CM_PER_SLV_EXPS_CLKCTRL   (0x128)
+#define CM_PER_OCPWP_L3_CLKSTCTRL   (0x12c)
+#define CM_PER_OCPWP_CLKCTRL   (0x130)
+#define CM_PER_ICSS_CLKSTCTRL   (0x140)
+#define CM_PER_CPSW_CLKSTCTRL   (0x144)
+#define CM_PER_LCDC_CLKSTCTRL   (0x148)
+#define CM_PER_CLKDIV32K_CLKCTRL   (0x14c)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL   (0x150)
+
+/**************************************************************************
+ * Field Definition Macros
+\**************************************************************************/
+
+/* L4LS_CLKSTCTRL */
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_CAN_CLK   (0x00000800u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_CAN_CLK_SHIFT   (0x0000000Bu)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_CAN_CLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_CAN_CLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_1_GDBCLK   (0x00080000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_1_GDBCLK_SHIFT   (0x00000013u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_1_GDBCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_1_GDBCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_2_GDBCLK   (0x00100000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_2_GDBCLK_SHIFT   (0x00000014u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_2_GDBCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_2_GDBCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_3_GDBCLK   (0x00200000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_3_GDBCLK_SHIFT   (0x00000015u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_3_GDBCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_GPIO_3_GDBCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_I2C_FCLK   (0x01000000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_I2C_FCLK_SHIFT   (0x00000018u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_I2C_FCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_I2C_FCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_L4LS_GCLK   (0x00000100u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_L4LS_GCLK_SHIFT   (0x00000008u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_L4LS_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_L4LS_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_LCDC_GCLK   (0x00020000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_LCDC_GCLK_SHIFT   (0x00000011u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_LCDC_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_LCDC_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_SPI_GCLK   (0x02000000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_SPI_GCLK_SHIFT   (0x00000019u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_SPI_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_SPI_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER2_GCLK   (0x00004000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER2_GCLK_SHIFT   (0x0000000Eu)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER2_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER2_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER3_GCLK   (0x00008000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER3_GCLK_SHIFT   (0x0000000Fu)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER3_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER3_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER4_GCLK   (0x00010000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER4_GCLK_SHIFT   (0x00000010u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER4_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER4_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER5_GCLK   (0x08000000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER5_GCLK_SHIFT   (0x0000001Bu)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER5_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER5_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER6_GCLK   (0x10000000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER6_GCLK_SHIFT   (0x0000001Cu)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER6_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER6_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER7_GCLK   (0x00002000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER7_GCLK_SHIFT   (0x0000000Du)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER7_GCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_TIMER7_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_UART_GFCLK   (0x00000400u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_UART_GFCLK_SHIFT   (0x0000000Au)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_UART_GFCLK_ACT   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKACTIVITY_UART_GFCLK_INACT   (0x0u)
+
+#define CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_L4LS_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* L3S_CLKSTCTRL */
+#define CM_PER_L3S_CLKSTCTRL_CLKACTIVITY_L3S_GCLK   (0x00000008u)
+#define CM_PER_L3S_CLKSTCTRL_CLKACTIVITY_L3S_GCLK_SHIFT   (0x00000003u)
+#define CM_PER_L3S_CLKSTCTRL_CLKACTIVITY_L3S_GCLK_ACT   (0x1u)
+#define CM_PER_L3S_CLKSTCTRL_CLKACTIVITY_L3S_GCLK_INACT   (0x0u)
+
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_L3S_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* L4FW_CLKSTCTRL */
+#define CM_PER_L4FW_CLKSTCTRL_CLKACTIVITY_L4FW_GCLK   (0x00000100u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKACTIVITY_L4FW_GCLK_SHIFT   (0x00000008u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKACTIVITY_L4FW_GCLK_ACT   (0x1u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKACTIVITY_L4FW_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4FW_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_L4FW_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* L3_CLKSTCTRL */
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_CPTS_RFT_GCLK   (0x00000040u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_CPTS_RFT_GCLK_SHIFT   (0x00000006u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_CPTS_RFT_GCLK_ACT   (0x1u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_CPTS_RFT_GCLK_INACT   (0x0u)
+
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_EMIF_GCLK   (0x00000004u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_EMIF_GCLK_SHIFT   (0x00000002u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_EMIF_GCLK_ACT   (0x1u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_EMIF_GCLK_INACT   (0x0u)
+
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_L3_GCLK   (0x00000010u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_L3_GCLK_SHIFT   (0x00000004u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_L3_GCLK_ACT   (0x1u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_L3_GCLK_INACT   (0x0u)
+
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MCASP_GCLK   (0x00000080u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MCASP_GCLK_SHIFT   (0x00000007u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MCASP_GCLK_ACT   (0x1u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MCASP_GCLK_INACT   (0x0u)
+
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MMC_FCLK   (0x00000008u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MMC_FCLK_SHIFT   (0x00000003u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MMC_FCLK_ACT   (0x1u)
+#define CM_PER_L3_CLKSTCTRL_CLKACTIVITY_MMC_FCLK_INACT   (0x0u)
+
+#define CM_PER_L3_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_L3_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_L3_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_L3_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_L3_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_L3_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* CPGMAC0_CLKCTRL */
+#define CM_PER_CPGMAC0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_CPGMAC0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_CPGMAC0_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_CPGMAC0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_CPGMAC0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_CPGMAC0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_CPGMAC0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_CPGMAC0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_CPGMAC0_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_CPGMAC0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_CPGMAC0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_CPGMAC0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_CPGMAC0_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_CPGMAC0_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_CPGMAC0_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_CPGMAC0_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* LCDC_CLKCTRL */
+#define CM_PER_LCDC_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_LCDC_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_LCDC_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_LCDC_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_LCDC_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_LCDC_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_LCDC_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_LCDC_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_LCDC_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_LCDC_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_LCDC_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_LCDC_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_LCDC_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_LCDC_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_LCDC_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_LCDC_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* USB0_CLKCTRL */
+#define CM_PER_USB0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_USB0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_USB0_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_USB0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_USB0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_USB0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_USB0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_USB0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_USB0_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_USB0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_USB0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_USB0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_USB0_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_USB0_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_USB0_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_USB0_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* MLB_CLKCTRL */
+#define CM_PER_MLB_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MLB_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MLB_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_MLB_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MLB_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MLB_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MLB_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MLB_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MLB_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_MLB_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MLB_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MLB_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_MLB_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_MLB_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_MLB_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_MLB_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* TPTC0_CLKCTRL */
+#define CM_PER_TPTC0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TPTC0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TPTC0_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_TPTC0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TPTC0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TPTC0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TPTC0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TPTC0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TPTC0_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TPTC0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TPTC0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TPTC0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_TPTC0_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_TPTC0_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_TPTC0_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_TPTC0_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* EMIF_CLKCTRL */
+#define CM_PER_EMIF_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_EMIF_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_EMIF_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_EMIF_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_EMIF_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_EMIF_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_EMIF_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_EMIF_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_EMIF_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_EMIF_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_EMIF_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_EMIF_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* OCMCRAM_CLKCTRL */
+#define CM_PER_OCMCRAM_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_OCMCRAM_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_OCMCRAM_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_OCMCRAM_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_OCMCRAM_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_OCMCRAM_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_OCMCRAM_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_OCMCRAM_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_OCMCRAM_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_OCMCRAM_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_OCMCRAM_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_OCMCRAM_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* GPMC_CLKCTRL */
+#define CM_PER_GPMC_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_GPMC_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_GPMC_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_GPMC_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_GPMC_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_GPMC_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_GPMC_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_GPMC_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_GPMC_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_GPMC_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_GPMC_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_GPMC_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* MCASP0_CLKCTRL */
+#define CM_PER_MCASP0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MCASP0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MCASP0_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_MCASP0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MCASP0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MCASP0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MCASP0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MCASP0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MCASP0_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_MCASP0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MCASP0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MCASP0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* UART5_CLKCTRL */
+#define CM_PER_UART5_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_UART5_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_UART5_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_UART5_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_UART5_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_UART5_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_UART5_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_UART5_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_UART5_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_UART5_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_UART5_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_UART5_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* MMC0_CLKCTRL */
+#define CM_PER_MMC0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MMC0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MMC0_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_MMC0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MMC0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MMC0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MMC0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MMC0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MMC0_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_MMC0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MMC0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MMC0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* ELM_CLKCTRL */
+#define CM_PER_ELM_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_ELM_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_ELM_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_ELM_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_ELM_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_ELM_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_ELM_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_ELM_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_ELM_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_ELM_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_ELM_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_ELM_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* I2C2_CLKCTRL */
+#define CM_PER_I2C2_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_I2C2_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_I2C2_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_I2C2_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_I2C2_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_I2C2_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_I2C2_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_I2C2_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_I2C2_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_I2C2_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_I2C2_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_I2C2_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* I2C1_CLKCTRL */
+#define CM_PER_I2C1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_I2C1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_I2C1_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_I2C1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_I2C1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_I2C1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_I2C1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_I2C1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_I2C1_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_I2C1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_I2C1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_I2C1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* SPI0_CLKCTRL */
+#define CM_PER_SPI0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_SPI0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_SPI0_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_SPI0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_SPI0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_SPI0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_SPI0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_SPI0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_SPI0_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_SPI0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_SPI0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_SPI0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* SPI1_CLKCTRL */
+#define CM_PER_SPI1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_SPI1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_SPI1_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_SPI1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_SPI1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_SPI1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_SPI1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_SPI1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_SPI1_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_SPI1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_SPI1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_SPI1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* L4LS_CLKCTRL */
+#define CM_PER_L4LS_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_L4LS_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_L4LS_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_L4LS_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_L4LS_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_L4LS_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_L4LS_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* L4FW_CLKCTRL */
+#define CM_PER_L4FW_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_L4FW_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_L4FW_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_L4FW_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_L4FW_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_L4FW_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_L4FW_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_L4FW_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_L4FW_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_L4FW_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L4FW_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_L4FW_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* MCASP1_CLKCTRL */
+#define CM_PER_MCASP1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MCASP1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MCASP1_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_MCASP1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MCASP1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MCASP1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MCASP1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MCASP1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MCASP1_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_MCASP1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MCASP1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MCASP1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* UART1_CLKCTRL */
+#define CM_PER_UART1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_UART1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_UART1_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_UART1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_UART1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_UART1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_UART1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_UART1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_UART1_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_UART1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_UART1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_UART1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* UART2_CLKCTRL */
+#define CM_PER_UART2_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_UART2_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_UART2_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_UART2_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_UART2_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_UART2_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_UART2_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_UART2_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_UART2_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_UART2_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_UART2_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_UART2_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* UART3_CLKCTRL */
+#define CM_PER_UART3_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_UART3_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_UART3_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_UART3_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_UART3_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_UART3_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_UART3_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_UART3_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_UART3_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_UART3_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_UART3_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_UART3_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* UART4_CLKCTRL */
+#define CM_PER_UART4_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_UART4_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_UART4_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_UART4_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_UART4_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_UART4_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_UART4_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_UART4_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_UART4_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_UART4_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_UART4_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_UART4_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* TIMER7_CLKCTRL */
+#define CM_PER_TIMER7_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TIMER7_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TIMER7_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_TIMER7_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TIMER7_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TIMER7_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TIMER7_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TIMER7_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TIMER7_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TIMER7_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TIMER7_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TIMER7_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* TIMER2_CLKCTRL */
+#define CM_PER_TIMER2_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TIMER2_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TIMER2_CLKCTRL_IDLEST_DISABLDED   (0x3u)
+#define CM_PER_TIMER2_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TIMER2_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TIMER2_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TIMER2_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TIMER2_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TIMER2_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TIMER2_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TIMER2_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TIMER2_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* TIMER3_CLKCTRL */
+#define CM_PER_TIMER3_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TIMER3_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TIMER3_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_TIMER3_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TIMER3_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TIMER3_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TIMER3_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TIMER3_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TIMER3_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TIMER3_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TIMER3_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TIMER3_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* TIMER4_CLKCTRL */
+#define CM_PER_TIMER4_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TIMER4_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TIMER4_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_TIMER4_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TIMER4_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TIMER4_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TIMER4_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TIMER4_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TIMER4_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TIMER4_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TIMER4_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TIMER4_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* RNG_CLKCTRL */
+#define CM_PER_RNG_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_RNG_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_RNG_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_RNG_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_RNG_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_RNG_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_RNG_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_RNG_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_RNG_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_RNG_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_RNG_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_RNG_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* AES0_CLKCTRL */
+#define CM_PER_AES0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_AES0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_AES0_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_AES0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_AES0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_AES0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_AES0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_AES0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_AES0_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_AES0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_AES0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_AES0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* SHA0_CLKCTRL */
+#define CM_PER_SHA0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_SHA0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_SHA0_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_SHA0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_SHA0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_SHA0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_SHA0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_SHA0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_SHA0_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_SHA0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_SHA0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_SHA0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* PKA_CLKCTRL */
+#define CM_PER_PKA_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_PKA_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_PKA_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_PKA_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_PKA_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_PKA_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_PKA_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_PKA_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_PKA_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_PKA_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_PKA_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_PKA_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* GPIO1_CLKCTRL */
+#define CM_PER_GPIO1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_GPIO1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_GPIO1_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_GPIO1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_GPIO1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_GPIO1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_GPIO1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_GPIO1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_GPIO1_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_GPIO1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_GPIO1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_GPIO1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_GPIO1_CLKCTRL_OPTFCLKEN_GPIO_1_GDBCLK   (0x00040000u)
+#define CM_PER_GPIO1_CLKCTRL_OPTFCLKEN_GPIO_1_GDBCLK_SHIFT   (0x00000012u)
+#define CM_PER_GPIO1_CLKCTRL_OPTFCLKEN_GPIO_1_GDBCLK_FCLK_DIS   (0x0u)
+#define CM_PER_GPIO1_CLKCTRL_OPTFCLKEN_GPIO_1_GDBCLK_FCLK_EN   (0x1u)
+
+
+/* GPIO2_CLKCTRL */
+#define CM_PER_GPIO2_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_GPIO2_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_GPIO2_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_GPIO2_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_GPIO2_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_GPIO2_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_GPIO2_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_GPIO2_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_GPIO2_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_GPIO2_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_GPIO2_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_GPIO2_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_GPIO2_CLKCTRL_OPTFCLKEN_GPIO_2_GDBCLK   (0x00040000u)
+#define CM_PER_GPIO2_CLKCTRL_OPTFCLKEN_GPIO_2_GDBCLK_SHIFT   (0x00000012u)
+#define CM_PER_GPIO2_CLKCTRL_OPTFCLKEN_GPIO_2_GDBCLK_FCLK_DIS   (0x0u)
+#define CM_PER_GPIO2_CLKCTRL_OPTFCLKEN_GPIO_2_GDBCLK_FCLK_EN   (0x1u)
+
+
+/* GPIO3_CLKCTRL */
+#define CM_PER_GPIO3_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_GPIO3_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_GPIO3_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_GPIO3_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_GPIO3_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_GPIO3_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_GPIO3_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_GPIO3_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_GPIO3_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_GPIO3_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_GPIO3_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_GPIO3_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_GPIO3_CLKCTRL_OPTFCLKEN_GPIO_3_GDBCLK   (0x00040000u)
+#define CM_PER_GPIO3_CLKCTRL_OPTFCLKEN_GPIO_3_GDBCLK_SHIFT   (0x00000012u)
+#define CM_PER_GPIO3_CLKCTRL_OPTFCLKEN_GPIO_3_GDBCLK_FCLK_DIS   (0x0u)
+#define CM_PER_GPIO3_CLKCTRL_OPTFCLKEN_GPIO_3_GDBCLK_FCLK_EN   (0x1u)
+
+
+/* TPCC_CLKCTRL */
+#define CM_PER_TPCC_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TPCC_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TPCC_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_TPCC_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TPCC_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TPCC_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TPCC_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TPCC_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TPCC_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TPCC_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TPCC_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TPCC_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* DCAN0_CLKCTRL */
+#define CM_PER_DCAN0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_DCAN0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_DCAN0_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_DCAN0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_DCAN0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_DCAN0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_DCAN0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_DCAN0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_DCAN0_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_DCAN0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_DCAN0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_DCAN0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* DCAN1_CLKCTRL */
+#define CM_PER_DCAN1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_DCAN1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_DCAN1_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_DCAN1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_DCAN1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_DCAN1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_DCAN1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_DCAN1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_DCAN1_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_DCAN1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_DCAN1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_DCAN1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* EPWMSS1_CLKCTRL */
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_EPWMSS1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_EPWMSS1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* EMIF_FW_CLKCTRL */
+#define CM_PER_EMIF_FW_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_EMIF_FW_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_EMIF_FW_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_EMIF_FW_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_EMIF_FW_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_EMIF_FW_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_EMIF_FW_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_EMIF_FW_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_EMIF_FW_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_EMIF_FW_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_EMIF_FW_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_EMIF_FW_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* EPWMSS0_CLKCTRL */
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_EPWMSS0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_EPWMSS0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_EPWMSS0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* EPWMSS2_CLKCTRL */
+#define CM_PER_EPWMSS2_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_EPWMSS2_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_EPWMSS2_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_EPWMSS2_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_EPWMSS2_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_EPWMSS2_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_EPWMSS2_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_EPWMSS2_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_EPWMSS2_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_EPWMSS2_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_EPWMSS2_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_EPWMSS2_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* L3_INSTR_CLKCTRL */
+#define CM_PER_L3_INSTR_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_L3_INSTR_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_L3_INSTR_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_L3_INSTR_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_L3_INSTR_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_L3_INSTR_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_L3_INSTR_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* L3_CLKCTRL */
+#define CM_PER_L3_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_L3_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_L3_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_L3_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_L3_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_L3_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_L3_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_L3_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_L3_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_L3_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L3_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_L3_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* IEEE5000_CLKCTRL */
+#define CM_PER_IEEE5000_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_IEEE5000_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_IEEE5000_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_IEEE5000_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_IEEE5000_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_IEEE5000_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_IEEE5000_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_IEEE5000_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_IEEE5000_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_IEEE5000_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_IEEE5000_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_IEEE5000_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_IEEE5000_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_IEEE5000_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_IEEE5000_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_IEEE5000_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* ICSS_CLKCTRL */
+#define CM_PER_ICSS_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_ICSS_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_ICSS_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_ICSS_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_ICSS_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_ICSS_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_ICSS_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_ICSS_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_ICSS_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_ICSS_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_ICSS_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_ICSS_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_ICSS_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_ICSS_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_ICSS_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_ICSS_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* TIMER5_CLKCTRL */
+#define CM_PER_TIMER5_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TIMER5_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TIMER5_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_TIMER5_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TIMER5_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TIMER5_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TIMER5_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TIMER5_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TIMER5_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_TIMER5_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TIMER5_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TIMER5_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* TIMER6_CLKCTRL */
+#define CM_PER_TIMER6_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TIMER6_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TIMER6_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_TIMER6_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TIMER6_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TIMER6_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TIMER6_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TIMER6_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TIMER6_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_TIMER6_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TIMER6_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TIMER6_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* MMC1_CLKCTRL */
+#define CM_PER_MMC1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MMC1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MMC1_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_MMC1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MMC1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MMC1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MMC1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MMC1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MMC1_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_MMC1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MMC1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MMC1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* MMC2_CLKCTRL */
+#define CM_PER_MMC2_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MMC2_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MMC2_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_MMC2_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MMC2_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MMC2_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MMC2_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MMC2_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MMC2_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_MMC2_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MMC2_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MMC2_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* TPTC1_CLKCTRL */
+#define CM_PER_TPTC1_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TPTC1_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TPTC1_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_TPTC1_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TPTC1_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TPTC1_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TPTC1_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TPTC1_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TPTC1_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TPTC1_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TPTC1_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TPTC1_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_TPTC1_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_TPTC1_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_TPTC1_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_TPTC1_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* TPTC2_CLKCTRL */
+#define CM_PER_TPTC2_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_TPTC2_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_TPTC2_CLKCTRL_IDLEST_DISABLED   (0x3u)
+#define CM_PER_TPTC2_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_TPTC2_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_TPTC2_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_TPTC2_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_TPTC2_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_TPTC2_CLKCTRL_MODULEMODE_DISABLE   (0x0u)
+#define CM_PER_TPTC2_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_TPTC2_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_TPTC2_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_TPTC2_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_TPTC2_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_TPTC2_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_TPTC2_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* SPINLOCK_CLKCTRL */
+#define CM_PER_SPINLOCK_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_SPINLOCK_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_SPINLOCK_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_SPINLOCK_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_SPINLOCK_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_SPINLOCK_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_SPINLOCK_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_SPINLOCK_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_SPINLOCK_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_SPINLOCK_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_SPINLOCK_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_SPINLOCK_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* MAILBOX0_CLKCTRL */
+#define CM_PER_MAILBOX0_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MAILBOX0_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MAILBOX0_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_MAILBOX0_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MAILBOX0_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MAILBOX0_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MAILBOX0_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MAILBOX0_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MAILBOX0_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_MAILBOX0_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MAILBOX0_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MAILBOX0_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* L4HS_CLKSTCTRL */
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_250MHZ_GCLK   (0x00000010u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_250MHZ_GCLK_SHIFT   (0x00000004u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_250MHZ_GCLK_ACT   (0x1u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_250MHZ_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_50MHZ_GCLK   (0x00000020u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_50MHZ_GCLK_SHIFT   (0x00000005u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_50MHZ_GCLK_ACT   (0x1u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_50MHZ_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_5MHZ_GCLK   (0x00000040u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_5MHZ_GCLK_SHIFT   (0x00000006u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_5MHZ_GCLK_ACT   (0x1u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_CPSW_5MHZ_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_L4HS_GCLK   (0x00000008u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_L4HS_GCLK_SHIFT   (0x00000003u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_L4HS_GCLK_ACT   (0x1u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKACTIVITY_L4HS_GCLK_INACT   (0x0u)
+
+#define CM_PER_L4HS_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_L4HS_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* L4HS_CLKCTRL */
+#define CM_PER_L4HS_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_L4HS_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_L4HS_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_L4HS_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_L4HS_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_L4HS_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_L4HS_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_L4HS_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_L4HS_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_L4HS_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_L4HS_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_L4HS_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* MSTR_EXPS_CLKCTRL */
+#define CM_PER_MSTR_EXPS_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_MSTR_EXPS_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_MSTR_EXPS_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_MSTR_EXPS_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* SLV_EXPS_CLKCTRL */
+#define CM_PER_SLV_EXPS_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_SLV_EXPS_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_SLV_EXPS_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_SLV_EXPS_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_SLV_EXPS_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_SLV_EXPS_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_SLV_EXPS_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_SLV_EXPS_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_SLV_EXPS_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_SLV_EXPS_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_SLV_EXPS_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_SLV_EXPS_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* OCPWP_L3_CLKSTCTRL */
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L3_GCLK   (0x00000010u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L3_GCLK_SHIFT   (0x00000004u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L3_GCLK_ACT   (0x1u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L3_GCLK_INACT   (0x0u)
+
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L4_GCLK   (0x00000020u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L4_GCLK_SHIFT   (0x00000005u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L4_GCLK_ACT   (0x1u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKACTIVITY_OCPWP_L4_GCLK_INACT   (0x0u)
+
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_OCPWP_L3_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* OCPWP_CLKCTRL */
+#define CM_PER_OCPWP_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_OCPWP_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_OCPWP_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_OCPWP_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_OCPWP_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_OCPWP_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_OCPWP_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_OCPWP_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_OCPWP_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_OCPWP_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_OCPWP_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_OCPWP_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+#define CM_PER_OCPWP_CLKCTRL_STBYST   (0x00040000u)
+#define CM_PER_OCPWP_CLKCTRL_STBYST_SHIFT   (0x00000012u)
+#define CM_PER_OCPWP_CLKCTRL_STBYST_FUNC   (0x0u)
+#define CM_PER_OCPWP_CLKCTRL_STBYST_STANDBY   (0x1u)
+
+
+/* ICSS_CLKSTCTRL */
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_IEP_GCLK   (0x00000020u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_IEP_GCLK_SHIFT   (0x00000005u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_IEP_GCLK_ACT   (0x1u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_IEP_GCLK_INACT   (0x0u)
+
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_OCP_GCLK   (0x00000010u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_OCP_GCLK_SHIFT   (0x00000004u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_OCP_GCLK_ACT   (0x1u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_OCP_GCLK_INACT   (0x0u)
+
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_UART_GCLK   (0x00000040u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_UART_GCLK_SHIFT   (0x00000006u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_UART_GCLK_ACT   (0x1u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKACTIVITY_ICSS_UART_GCLK_INACT   (0x0u)
+
+#define CM_PER_ICSS_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_ICSS_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* CPSW_CLKSTCTRL */
+#define CM_PER_CPSW_CLKSTCTRL_CLKACTIVITY_CPSW_125MHZ_GCLK   (0x00000010u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKACTIVITY_CPSW_125MHZ_GCLK_SHIFT   (0x00000004u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKACTIVITY_CPSW_125MHZ_GCLK_ACT   (0x1u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKACTIVITY_CPSW_125MHZ_GCLK_INACT   (0x0u)
+
+#define CM_PER_CPSW_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_CPSW_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* LCDC_CLKSTCTRL */
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L3_OCP_GCLK   (0x00000010u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L3_OCP_GCLK_SHIFT   (0x00000004u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L3_OCP_GCLK_ACT   (0x1u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L3_OCP_GCLK_INACT   (0x0u)
+
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L4_OCP_GCLK   (0x00000020u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L4_OCP_GCLK_SHIFT   (0x00000005u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L4_OCP_GCLK_ACT   (0x1u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKACTIVITY_LCDC_L4_OCP_GCLK_INACT   (0x0u)
+
+#define CM_PER_LCDC_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_LCDC_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
+/* CLKDIV32K_CLKCTRL */
+#define CM_PER_CLKDIV32K_CLKCTRL_IDLEST   (0x00030000u)
+#define CM_PER_CLKDIV32K_CLKCTRL_IDLEST_SHIFT   (0x00000010u)
+#define CM_PER_CLKDIV32K_CLKCTRL_IDLEST_DISABLE   (0x3u)
+#define CM_PER_CLKDIV32K_CLKCTRL_IDLEST_FUNC   (0x0u)
+#define CM_PER_CLKDIV32K_CLKCTRL_IDLEST_IDLE   (0x2u)
+#define CM_PER_CLKDIV32K_CLKCTRL_IDLEST_TRANS   (0x1u)
+
+#define CM_PER_CLKDIV32K_CLKCTRL_MODULEMODE   (0x00000003u)
+#define CM_PER_CLKDIV32K_CLKCTRL_MODULEMODE_SHIFT   (0x00000000u)
+#define CM_PER_CLKDIV32K_CLKCTRL_MODULEMODE_DISABLED   (0x0u)
+#define CM_PER_CLKDIV32K_CLKCTRL_MODULEMODE_ENABLE   (0x2u)
+#define CM_PER_CLKDIV32K_CLKCTRL_MODULEMODE_RESERVED   (0x3u)
+#define CM_PER_CLKDIV32K_CLKCTRL_MODULEMODE_RESERVED_1   (0x1u)
+
+
+/* CLK_24MHZ_CLKSTCTRL */
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKACTIVITY_CLK_24MHZ_GCLK   (0x00000010u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKACTIVITY_CLK_24MHZ_GCLK_SHIFT   (0x00000004u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKACTIVITY_CLK_24MHZ_GCLK_ACT   (0x1u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKACTIVITY_CLK_24MHZ_GCLK_INACT   (0x0u)
+
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKTRCTRL   (0x00000003u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKTRCTRL_SHIFT   (0x00000000u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKTRCTRL_HW_AUTO   (0x3u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKTRCTRL_NO_SLEEP   (0x0u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKTRCTRL_SW_SLEEP   (0x1u)
+#define CM_PER_CLK_24MHZ_CLKSTCTRL_CLKTRCTRL_SW_WKUP   (0x2u)
+
+
-- 
2.7.1

